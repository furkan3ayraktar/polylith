<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="BranchesTreeState">
    <expand>
      <path>
        <item name="ROOT" type="e8cecc67:BranchNodeDescriptor" />
        <item name="LOCAL_ROOT" type="e8cecc67:BranchNodeDescriptor" />
      </path>
      <path>
        <item name="ROOT" type="e8cecc67:BranchNodeDescriptor" />
        <item name="REMOTE_ROOT" type="e8cecc67:BranchNodeDescriptor" />
      </path>
      <path>
        <item name="ROOT" type="e8cecc67:BranchNodeDescriptor" />
        <item name="REMOTE_ROOT" type="e8cecc67:BranchNodeDescriptor" />
        <item name="GROUP_NODE:origin" type="e8cecc67:BranchNodeDescriptor" />
      </path>
    </expand>
    <select />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="efb7e483-1e6d-4313-8bc6-039a64b976a1" name="Default Changelist" comment="Updated the todo.">
      <change beforePath="$PROJECT_DIR$/components/workspace/src/polylith/workspace/interface.clj" beforeDir="false" afterPath="$PROJECT_DIR$/components/workspace/src/polylith/workspace/interface.clj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/environments/core/deps.edn" beforeDir="false" afterPath="$PROJECT_DIR$/environments/core/deps.edn" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/todo.txt" beforeDir="false" afterPath="$PROJECT_DIR$/todo.txt" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="CodeStyleSettingsInfer">
    <option name="done" value="true" />
  </component>
  <component name="DepsLocalSettings">
    <option name="repoId" value="" />
    <option name="repoUrl" value="" />
    <option name="projectSyncType">
      <map>
        <entry key="$PROJECT_DIR$/../clojure-polylith-realworld-example-app" value="PREVIEW" />
      </map>
    </option>
  </component>
  <component name="DepsProjectDetails">
    <option name="cachedModuleDetails">
      <map>
        <entry key="$PROJECT_DIR$/deps.edn">
          <value>
            <ModuleDetails>
              <option name="details" value="{:paths [&quot;src&quot;], :deps {org.clojure/clojure {:mvn/version &quot;1.10.1&quot;}}, :aliases {:deps {:extra-deps {org.clojure/tools.deps.alpha {:mvn/version &quot;0.8.677&quot;}}}, :test {:main-opts [&quot;-m&quot; &quot;polylith.cli.poly&quot; &quot;test&quot;]}, :dev {:extra-deps {env/core {:local/root &quot;environments/core&quot;}}}, :check {:main-opts [&quot;-m&quot; &quot;polylith.cli.poly&quot; &quot;check&quot;]}}, :mvn/repos {&quot;central&quot; {:url &quot;https://repo1.maven.org/maven2/&quot;}, &quot;clojars&quot; {:url &quot;https://repo.clojars.org/&quot;}}, :polylith {:top-namespace &quot;polylith&quot;, :dark-mode? true}, :system-aliases #{:test :deps}, :deps-tree {javax.inject/javax.inject {:mvn/version &quot;1&quot;, :deps/manifest :mvn, :dependents [org.clojure/tools.deps.alpha], :paths [&quot;/Users/tengstrand/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar&quot;], :children ()}, org.clojure/data.json {:mvn/version &quot;0.2.7&quot;, :deps/manifest :mvn, :dependents [com.cognitect.aws/api], :paths [&quot;/Users/tengstrand/.m2/repository/org/clojure/data.json/0.2.7/data.json-0.2.7.jar&quot;], :children ()}, org.clojure/clojure {:mvn/version &quot;1.10.1&quot;, :deps/manifest :mvn, :paths [&quot;/Users/tengstrand/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar&quot;], :children (org.clojure/core.specs.alpha org.clojure/spec.alpha)}, kotlin/src-reader {:local/root &quot;/Users/tengstrand/source/polylith-kotlin/build/libs/polylith-kotlin.jar&quot;, :deps/manifest :jar, :deps/root &quot;/Users/tengstrand/source/polylith-kotlin/build/libs/polylith-kotlin.jar&quot;, :dependents [env/core], :paths [&quot;/Users/tengstrand/source/polylith-kotlin/build/libs/polylith-kotlin.jar&quot;], :children ()}, commons-codec/commons-codec {:mvn/version &quot;1.13&quot;, :deps/manifest :mvn, :dependents [com.cognitect.aws/api], :paths [&quot;/Users/tengstrand/.m2/repository/commons-codec/commons-codec/1.13/commons-codec-1.13.jar&quot;], :children ()}, com.cognitect.aws/api {:mvn/version &quot;0.8.408&quot;, :deps/manifest :mvn, :dependents [org.clojure/tools.deps.alpha], :paths [&quot;/Users/tengstrand/.m2/repository/com/cognitect/aws/api/0.8.408/api-0.8.408.jar&quot;], :children (org.clojure/data.json commons-codec/commons-codec org.clojure/tools.logging com.cognitect/http-client org.clojure/core.async)}, org.clojure/tools.analyzer {:mvn/version &quot;0.6.9&quot;, :deps/manifest :mvn, :dependents [org.clojure/tools.analyzer.jvm], :paths [&quot;/Users/tengstrand/.m2/repository/org/clojure/tools.analyzer/0.6.9/tools.analyzer-0.6.9.jar&quot;], :children ()}, org.codehaus.plexus/plexus-component-annotations {:mvn/version &quot;2.1.0&quot;, :exclusions #{junit/junit}, :deps/manifest :mvn, :dependents [org.apache.maven/maven-core], :paths [&quot;/Users/tengstrand/.m2/repository/org/codehaus/plexus/plexus-component-annotations/2.1.0/plexus-component-annotations-2.1.0.jar&quot;], :children ()}, com.cognitect.aws/endpoints {:mvn/version &quot;1.1.11.705&quot;, :deps/manifest :mvn, :dependents [org.clojure/tools.deps.alpha], :paths [&quot;/Users/tengstrand/.m2/repository/com/cognitect/aws/endpoints/1.1.11.705/endpoints-1.1.11.705.jar&quot;], :children ()}, com.google.errorprone/error_prone_annotations {:mvn/version &quot;2.1.3&quot;, :deps/manifest :mvn, :dependents [com.google.guava/guava], :paths [&quot;/Users/tengstrand/.m2/repository/com/google/errorprone/error_prone_annotations/2.1.3/error_prone_annotations-2.1.3.jar&quot;], :children ()}, org.apache.commons/commons-lang3 {:mvn/version &quot;3.8.1&quot;, :deps/manifest :mvn, :dependents [org.apache.maven/maven-core], :paths [&quot;/Users/tengstrand/.m2/repository/org/apache/commons/commons-lang3/3.8.1/commons-lang3-3.8.1.jar&quot;], :children ()}, org.clojure/tools.logging {:mvn/version &quot;0.5.0&quot;, :deps/manifest :mvn, :dependents [com.cognitect.aws/api], :paths [&quot;/Users/tengstrand/.m2/repository/org/clojure/tools.logging/0.5.0/tools.logging-0.5.0.jar&quot;], :children ()}, org.clojure/core.specs.alpha {:mvn/version &quot;0.2.44&quot;, :deps/manifest :mvn, :dependents [org.clojure/clojure], :paths [&quot;/Users/tengstrand/.m2/repository/org/clojure/core.specs.alpha/0.2.44/core.specs.alpha-0.2.44.jar&quot;], :children ()}, org.clojure/spec.alpha {:mvn/version &quot;0.2.176&quot;, :deps/manifest :mvn, :dependents [org.clojure/clojure], :paths [&quot;/Users/tengstrand/.m2/repository/org/clojure/spec.alpha/0.2.176/spec.alpha-0.2.176.jar&quot;], :children ()}, org.clojure/tools.cli {:mvn/version &quot;0.4.2&quot;, :deps/manifest :mvn, :dependents [org.clojure/tools.deps.alpha], :paths [&quot;/Users/tengstrand/.m2/repository/org/clojure/tools.cli/0.4.2/tools.cli-0.4.2.jar&quot;], :children ()}, org.jetbrains.kotlin/kotlin-stdlib {:mvn/version &quot;1.3.72&quot;, :deps/manifest :mvn, :dependents [org.jetbrains.kotlin/kotlin-compiler-embeddable], :paths [&quot;/Users/tengstrand/.m2/repository/org/jetbrains/kotlin/kotlin-stdlib/1.3.72/kotlin-stdlib-1.3.72.jar&quot;], :children (org.jetbrains/annotations org.jetbrains.kotlin/kotlin-stdlib-common)}, org.codehaus.mojo/animal-sniffer-annotations {:mvn/version &quot;1.14&quot;, :deps/manifest :mvn, :dependents [com.google.guava/guava], :paths [&quot;/Users/tengstrand/.m2/repository/org/codehaus/mojo/animal-sniffer-annotations/1.14/animal-sniffer-annotations-1.14.jar&quot;], :children ()}, org.eclipse.jetty/jetty-http {:mvn/version &quot;9.4.15.v20190215&quot;, :deps/manifest :mvn, :dependents [com.cognitect/http-client], :paths [&quot;/Users/tengstrand/.m2/repository/org/eclipse/jetty/jetty-http/9.4.15.v20190215/jetty-http-9.4.15.v20190215.jar&quot;], :children ()}, org.eclipse.jetty/jetty-util {:mvn/version &quot;9.4.15.v20190215&quot;, :deps/manifest :mvn, :dependents [com.cognitect/http-client], :paths [&quot;/Users/tengstrand/.m2/repository/org/eclipse/jetty/jetty-util/9.4.15.v20190215/jetty-util-9.4.15.v20190215.jar&quot;], :children ()}, org.slf4j/jcl-over-slf4j {:mvn/version &quot;1.7.25&quot;, :deps/manifest :mvn, :dependents [org.apache.maven.resolver/maven-resolver-transport-http], :paths [&quot;/Users/tengstrand/.m2/repository/org/slf4j/jcl-over-slf4j/1.7.25/jcl-over-slf4j-1.7.25.jar&quot;], :children ()}, org.clojure/tools.analyzer.jvm {:mvn/version &quot;0.7.2&quot;, :deps/manifest :mvn, :dependents [org.clojure/core.async], :paths [&quot;/Users/tengstrand/.m2/repository/org/clojure/tools.analyzer.jvm/0.7.2/tools.analyzer.jvm-0.7.2.jar&quot;], :children (org.clojure/tools.analyzer org.clojure/tools.reader org.clojure/core.memoize org.ow2.asm/asm-all)}, com.jcraft/jsch.agentproxy.jsch {:mvn/version &quot;0.0.9&quot;, :deps/manifest :mvn, :dependents [org.clojure/tools.gitlibs], :paths [&quot;/Users/tengstrand/.m2/repository/com/jcraft/jsch.agentproxy.jsch/0.0.9/jsch.agentproxy.jsch-0.0.9.jar&quot;], :children ()}, com.jcraft/jsch.agentproxy.sshagent {:mvn/version &quot;0.0.9&quot;, :deps/manifest :mvn, :dependents [com.jcraft/jsch.agentproxy.connector-factory], :paths [&quot;/Users/tengstrand/.m2/repository/com/jcraft/jsch.agentproxy.sshagent/0.0.9/jsch.agentproxy.sshagent-0.0.9.jar&quot;], :children ()}, org.apache.maven.resolver/maven-resolver-transport-http {:mvn/version &quot;1.4.1&quot;, :deps/manifest :mvn, :dependents [org.clojure/tools.deps.alpha], :paths [&quot;/Users/tengstrand/.m2/repository/org/apache/maven/resolver/maven-resolver-transport-http/1.4.1/maven-resolver-transport-http-1.4.1.jar&quot;], :children (org.slf4j/jcl-over-slf4j org.apache.httpcomponents/httpcore org.apache.httpcomponents/httpclient)}, org.apache.maven/maven-model-builder {:mvn/version &quot;3.6.3&quot;, :deps/manifest :mvn, :dependents [org.apache.maven/maven-resolver-provider], :paths [&quot;/Users/tengstrand/.m2/repository/org/apache/maven/maven-model-builder/3.6.3/maven-model-builder-3.6.3.jar&quot;], :children (org.codehaus.plexus/plexus-interpolation)}, com.googlecode.javaewah/JavaEWAH {:mvn/version &quot;1.1.6&quot;, :deps/manifest :mvn, :dependents [org.eclipse.jgit/org.eclipse.jgit], :paths [&quot;/Users/tengstrand/.m2/repository/com/googlecode/javaewah/JavaEWAH/1.1.6/JavaEWAH-1.1.6.jar&quot;], :children ()}, org.codehaus.plexus/plexus-utils {:mvn/version &quot;3.2.1&quot;, :deps/manifest :mvn, :dependents [org.apache.maven/maven-resolver-provider], :paths [&quot;/Users/tengstrand/.m2/repository/org/codehaus/plexus/plexus-utils/3.2.1/plexus-utils-3.2.1.jar&quot;], :children ()}, org.apache.maven.resolver/maven-resolver-transport-file {:mvn/version &quot;1.4.1&quot;, :deps/manifest :mvn, :dependents [org.clojure/tools.deps.alpha], :paths [&quot;/Users/tengstrand/.m2/repository/org/apache/maven/resolver/maven-resolver-transport-file/1.4.1/maven-resolver-transport-file-1.4.1.jar&quot;], :children ()}, org.eclipse.sisu/org.eclipse.sisu.plexus {:mvn/version &quot;0.3.4&quot;, :deps/manifest :mvn, :dependents [org.apache.maven/maven-core], :paths [&quot;/Users/tengstrand/.m2/repository/org/eclipse/sisu/org.eclipse.sisu.plexus/0.3.4/org.eclipse.sisu.plexus-0.3.4.jar&quot;], :children (javax.enterprise/cdi-api)}, org.jetbrains/annotations {:mvn/version &quot;13.0&quot;, :deps/manifest :mvn, :dependents [org.jetbrains.kotlin/kotlin-stdlib], :paths [&quot;/Users/tengstrand/.m2/repository/org/jetbrains/annotations/13.0/annotations-13.0.jar&quot;], :children ()}, com.jcraft/jsch.agentproxy.usocket-jna {:mvn/version &quot;0.0.9&quot;, :deps/manifest :mvn, :dependents [com.jcraft/jsch.agentproxy.connector-factory], :paths [&quot;/Users/tengstrand/.m2/repository/com/jcraft/jsch.agentproxy.usocket-jna/0.0.9/jsch.agentproxy.usocket-jna-0.0.9.jar&quot;], :children (net.java.dev.jna/jna net.java.dev.jna/jna-platform)}, commons-io/commons-io {:mvn/version &quot;2.5&quot;, :deps/manifest :mvn, :dependents [org.apache.maven.shared/maven-shared-utils], :paths [&quot;/Users/tengstrand/.m2/repository/commons-io/commons-io/2.5/commons-io-2.5.jar&quot;], :children ()}, org.apache.maven/maven-settings-builder {:mvn/version &quot;3.6.3&quot;, :deps/manifest :mvn, :dependents [org.apache.maven/maven-core], :paths [&quot;/Users/tengstrand/.m2/repository/org/apache/maven/maven-settings-builder/3.6.3/maven-settings-builder-3.6.3.jar&quot;], :children (org.sonatype.plexus/plexus-sec-dispatcher)}, org.eclipse.jgit/org.eclipse.jgit {:mvn/version &quot;4.10.0.201712302008-r&quot;, :deps/manifest :mvn, :dependents [org.clojure/tools.gitlibs], :paths [&quot;/Users/tengstrand/.m2/repository/org/eclipse/jgit/org.eclipse.jgit/4.10.0.201712302008-r/org.eclipse.jgit-4.10.0.201712302008-r.jar&quot;], :children (com.googlecode.javaewah/JavaEWAH com.jcraft/jsch)}, javax.enterprise/cdi-api {:mvn/version &quot;1.0&quot;, :exclusions #{org.jboss.interceptor/jboss-interceptor-api javax.el/el-api org.jboss.ejb3/jboss-ejb3-api}, :deps/manifest :mvn, :dependents [org.eclipse.sisu/org.eclipse.sisu.plexus], :paths [&quot;/Users/tengstrand/.m2/repository/javax/enterprise/cdi-api/1.0/cdi-api-1.0.jar&quot;], :children (javax.annotation/jsr250-api)}, env/core {:local/root &quot;/Users/tengstrand/source/polylith/environments/core&quot;, :deps/manifest :deps, :deps/root &quot;/Users/tengstrand/source/polylith/environments/core&quot;, :paths [&quot;/Users/tengstrand/source/polylith/bases/cli/src&quot; &quot;/Users/tengstrand/source/polylith/components/change/src&quot; &quot;/Users/tengstrand/source/polylith/components/common/src&quot; &quot;/Users/tengstrand/source/polylith/components/deps/src&quot; &quot;/Users/tengstrand/source/polylith/components/file/src&quot; &quot;/Users/tengstrand/source/polylith/components/git/src&quot; &quot;/Users/tengstrand/source/polylith/components/shell/src&quot; &quot;/Users/tengstrand/source/polylith/components/spec/src&quot; &quot;/Users/tengstrand/source/polylith/components/test-runner/src&quot; &quot;/Users/tengstrand/source/polylith/components/util/src&quot; &quot;/Users/tengstrand/source/polylith/components/validate/src&quot; &quot;/Users/tengstrand/source/polylith/components/workspace/src&quot; &quot;/Users/tengstrand/source/polylith/components/workspace-clj/src&quot; &quot;/Users/tengstrand/source/polylith/components/workspace-kotlin/src&quot;], :children (kotlin/src-reader org.jetbrains.kotlin/kotlin-compiler-embeddable jakarta/jar)}, org.apache.maven/maven-settings {:mvn/version &quot;3.6.3&quot;, :deps/manifest :mvn, :dependents [org.apache.maven/maven-core], :paths [&quot;/Users/tengstrand/.m2/repository/org/apache/maven/maven-settings/3.6.3/maven-settings-3.6.3.jar&quot;], :children ()}, org.apache.httpcomponents/httpcore {:mvn/version &quot;4.4.10&quot;, :deps/manifest :mvn, :dependents [org.apache.maven.resolver/maven-resolver-transport-http], :paths [&quot;/Users/tengstrand/.m2/repository/org/apache/httpcomponents/httpcore/4.4.10/httpcore-4.4.10.jar&quot;], :children ()}, org.apache.maven/maven-core {:mvn/version &quot;3.6.3&quot;, :deps/manifest :mvn, :dependents [org.clojure/tools.deps.alpha], :paths [&quot;/Users/tengstrand/.m2/repository/org/apache/maven/maven-core/3.6.3/maven-core-3.6.3.jar&quot;], :children (org.codehaus.plexus/plexus-component-annotations org.apache.commons/commons-lang3 org.eclipse.sisu/org.eclipse.sisu.plexus org.apache.maven/maven-settings-builder org.apache.maven/maven-settings org.apache.maven.shared/maven-shared-utils org.codehaus.plexus/plexus-classworlds com.google.inject/guice$no_aop org.eclipse.sisu/org.eclipse.sisu.inject org.apache.maven/maven-builder-support org.apache.maven/maven-plugin-api org.apache.maven/maven-artifact)}, org.sonatype.plexus/plexus-cipher {:mvn/version &quot;1.4&quot;, :deps/manifest :mvn, :dependents [org.sonatype.plexus/plexus-sec-dispatcher], :paths [&quot;/Users/tengstrand/.m2/repository/org/sonatype/plexus/plexus-cipher/1.4/plexus-cipher-1.4.jar&quot;], :children ()}, com.jcraft/jsch.agentproxy.pageant {:mvn/version &quot;0.0.9&quot;, :deps/manifest :mvn, :dependents [com.jcraft/jsch.agentproxy.connector-factory], :paths [&quot;/Users/tengstrand/.m2/repository/com/jcraft/jsch.agentproxy.pageant/0.0.9/jsch.agentproxy.pageant-0.0.9.jar&quot;], :children ()}, org.apache.maven.resolver/maven-resolver-api {:mvn/version &quot;1.4.1&quot;, :deps/manifest :mvn, :dependents [org.clojure/tools.deps.alpha], :paths [&quot;/Users/tengstrand/.m2/repository/org/apache/maven/resolver/maven-resolver-api/1.4.1/maven-resolver-api-1.4.1.jar&quot;], :children ()}, javax.annotation/jsr250-api {:mvn/version &quot;1.0&quot;, :deps/manifest :mvn, :dependents [javax.enterprise/cdi-api], :paths [&quot;/Users/tengstrand/.m2/repository/javax/annotation/jsr250-api/1.0/jsr250-api-1.0.jar&quot;], :children ()}, com.cognitect/http-client {:mvn/version &quot;0.1.101&quot;, :deps/manifest :mvn, :dependents [com.cognitect.aws/api], :paths [&quot;/Users/tengstrand/.m2/repository/com/cognitect/http-client/0.1.101/http-client-0.1.101.jar&quot;], :children (org.eclipse.jetty/jetty-http org.eclipse.jetty/jetty-util org.eclipse.jetty/jetty-client)}, org.apache.maven/maven-resolver-provider {:mvn/version &quot;3.6.3&quot;, :deps/manifest :mvn, :dependents [org.clojure/tools.deps.alpha], :paths [&quot;/Users/tengstrand/.m2/repository/org/apache/maven/maven-resolver-provider/3.6.3/maven-resolver-provider-3.6.3.jar&quot;], :children (org.apache.maven/maven-model-builder org.codehaus.plexus/plexus-utils org.slf4j/slf4j-api org.apache.maven/maven-model org.apache.maven/maven-repository-metadata)}, org.checkerframework/checker-compat-qual {:mvn/version &quot;2.0.0&quot;, :deps/manifest :mvn, :dependents [com.google.guava/guava], :paths [&quot;/Users/tengstrand/.m2/repository/org/checkerframework/checker-compat-qual/2.0.0/checker-compat-qual-2.0.0.jar&quot;], :children ()}, org.apache.maven.shared/maven-shared-utils {:mvn/version &quot;3.2.1&quot;, :deps/manifest :mvn, :dependents [org.apache.maven/maven-core], :paths [&quot;/Users/tengstrand/.m2/repository/org/apache/maven/shared/maven-shared-utils/3.2.1/maven-shared-utils-3.2.1.jar&quot;], :children (commons-io/commons-io)}, org.clojure/tools.deps.alpha {:mvn/version &quot;0.8.677&quot;, :deps/manifest :mvn, :paths [&quot;/Users/tengstrand/.m2/repository/org/clojure/tools.deps.alpha/0.8.677/tools.deps.alpha-0.8.677.jar&quot;], :children (javax.inject/javax.inject com.cognitect.aws/api com.cognitect.aws/endpoints org.clojure/tools.cli org.apache.maven.resolver/maven-resolver-transport-http org.apache.maven.resolver/maven-resolver-transport-file org.apache.maven/maven-core org.apache.maven.resolver/maven-resolver-api org.apache.maven/maven-resolver-provider org.clojure/data.xml org.apache.maven.resolver/maven-resolver-spi org.clojure/tools.gitlibs org.apache.maven.resolver/maven-resolver-connector-basic com.cognitect.aws/s3 org.apache.maven.resolver/maven-resolver-impl org.apache.maven.resolver/maven-resolver-util)}, com.google.guava/guava {:mvn/version &quot;25.1-android&quot;, :deps/manifest :mvn, :dependents [com.google.inject/guice$no_aop], :paths [&quot;/Users/tengstrand/.m2/repository/com/google/guava/guava/25.1-android/guava-25.1-android.jar&quot;], :children (com.google.errorprone/error_prone_annotations org.codehaus.mojo/animal-sniffer-annotations org.checkerframework/checker-compat-qual com.google.j2objc/j2objc-annotations com.google.code.findbugs/jsr305)}, org.clojure/data.xml {:mvn/version &quot;0.2.0-alpha6&quot;, :deps/manifest :mvn, :dependents [org.clojure/tools.deps.alpha], :paths [&quot;/Users/tengstrand/.m2/repository/org/clojure/data.xml/0.2.0-alpha6/data.xml-0.2.0-alpha6.jar&quot;], :children (org.clojure/data.codec)}, org.apache.maven.resolver/maven-resolver-spi {:mvn/version &quot;1.4.1&quot;, :deps/manifest :mvn, :dependents [org.clojure/tools.deps.alpha], :paths [&quot;/Users/tengstrand/.m2/repository/org/apache/maven/resolver/maven-resolver-spi/1.4.1/maven-resolver-spi-1.4.1.jar&quot;], :children ()}, org.jetbrains.intellij.deps/trove4j {:mvn/version &quot;1.0.20181211&quot;, :deps/manifest :mvn, :dependents [org.jetbrains.kotlin/kotlin-compiler-embeddable], :paths [&quot;/Users/tengstrand/.m2/repository/org/jetbrains/intellij/deps/trove4j/1.0.20181211/trove4j-1.0.20181211.jar&quot;], :children ()}, com.google.j2objc/j2objc-annotations {:mvn/version &quot;1.1&quot;, :deps/manifest :mvn, :dependents [com.google.guava/guava], :paths [&quot;/Users/tengstrand/.m2/repository/com/google/j2objc/j2objc-annotations/1.1/j2objc-annotations-1.1.jar&quot;], :children ()}, org.codehaus.plexus/plexus-classworlds {:mvn/version &quot;2.6.0&quot;, :deps/manifest :mvn, :dependents [org.apache.maven/maven-core], :paths [&quot;/Users/tengstrand/.m2/repository/org/codehaus/plexus/plexus-classworlds/2.6.0/plexus-classworlds-2.6.0.jar&quot;], :children ()}, org.jetbrains.kotlin/kotlin-compiler-embeddable {:mvn/version &quot;1.3.72&quot;, :deps/manifest :mvn, :dependents [env/core], :paths [&quot;/Users/tengstrand/.m2/repository/org/jetbrains/kotlin/kotlin-compiler-embeddable/1.3.72/kotlin-compiler-embeddable-1.3.72.jar&quot;], :children (org.jetbrains.kotlin/kotlin-stdlib org.jetbrains.intellij.deps/trove4j org.jetbrains.kotlin/kotlin-reflect org.jetbrains.kotlin/kotlin-script-runtime org.jetbrains.kotlin/kotlin-daemon-embeddable)}, org.sonatype.plexus/plexus-sec-dispatcher {:mvn/version &quot;1.4&quot;, :deps/manifest :mvn, :dependents [org.apache.maven/maven-settings-builder], :paths [&quot;/Users/tengstrand/.m2/repository/org/sonatype/plexus/plexus-sec-dispatcher/1.4/plexus-sec-dispatcher-1.4.jar&quot;], :children (org.sonatype.plexus/plexus-cipher)}, org.codehaus.plexus/plexus-interpolation {:mvn/version &quot;1.25&quot;, :deps/manifest :mvn, :dependents [org.apache.maven/maven-model-builder], :paths [&quot;/Users/tengstrand/.m2/repository/org/codehaus/plexus/plexus-interpolation/1.25/plexus-interpolation-1.25.jar&quot;], :children ()}, org.apache.httpcomponents/httpclient {:mvn/version &quot;4.5.6&quot;, :exclusions #{commons-logging/commons-logging}, :deps/manifest :mvn, :dependents [org.apache.maven.resolver/maven-resolver-transport-http], :paths [&quot;/Users/tengstrand/.m2/repository/org/apache/httpcomponents/httpclient/4.5.6/httpclient-4.5.6.jar&quot;], :children ()}, net.java.dev.jna/jna {:mvn/version &quot;4.1.0&quot;, :deps/manifest :mvn, :dependents [com.jcraft/jsch.agentproxy.usocket-jna], :paths [&quot;/Users/tengstrand/.m2/repository/net/java/dev/jna/jna/4.1.0/jna-4.1.0.jar&quot;], :children ()}, com.google.inject/guice$no_aop {:mvn/version &quot;4.2.1&quot;, :deps/manifest :mvn, :dependents [org.apache.maven/maven-core], :paths [&quot;/Users/tengstrand/.m2/repository/com/google/inject/guice/4.2.1/guice-4.2.1-no_aop.jar&quot;], :children (com.google.guava/guava aopalliance/aopalliance)}, org.jetbrains.kotlin/kotlin-stdlib-common {:mvn/version &quot;1.3.72&quot;, :deps/manifest :mvn, :dependents [org.jetbrains.kotlin/kotlin-stdlib], :paths [&quot;/Users/tengstrand/.m2/repository/org/jetbrains/kotlin/kotlin-stdlib-common/1.3.72/kotlin-stdlib-common-1.3.72.jar&quot;], :children ()}, com.jcraft/jsch.agentproxy.connector-factory {:mvn/version &quot;0.0.9&quot;, :deps/manifest :mvn, :dependents [org.clojure/tools.gitlibs], :paths [&quot;/Users/tengstrand/.m2/repository/com/jcraft/jsch.agentproxy.connector-factory/0.0.9/jsch.agentproxy.connector-factory-0.0.9.jar&quot;], :children (com.jcraft/jsch.agentproxy.sshagent com.jcraft/jsch.agentproxy.usocket-jna com.jcraft/jsch.agentproxy.pageant com.jcraft/jsch.agentproxy.core com.jcraft/jsch.agentproxy.usocket-nc)}, org.eclipse.jetty/jetty-client {:mvn/version &quot;9.4.15.v20190215&quot;, :deps/manifest :mvn, :dependents [com.cognitect/http-client], :paths [&quot;/Users/tengstrand/.m2/repository/org/eclipse/jetty/jetty-client/9.4.15.v20190215/jetty-client-9.4.15.v20190215.jar&quot;], :children (org.eclipse.jetty/jetty-io)}, org.eclipse.jetty/jetty-io {:mvn/version &quot;9.4.15.v20190215&quot;, :deps/manifest :mvn, :dependents [org.eclipse.jetty/jetty-client], :paths [&quot;/Users/tengstrand/.m2/repository/org/eclipse/jetty/jetty-io/9.4.15.v20190215/jetty-io-9.4.15.v20190215.jar&quot;], :children ()}, jakarta/jar {:local/root &quot;/Users/tengstrand/.m2/repository/jakarta/servlet/jakarta.servlet-api/4.0.3/jakarta.servlet-api-4.0.3.jar&quot;, :deps/manifest :jar, :deps/root &quot;/Users/tengstrand/.m2/repository/jakarta/servlet/jakarta.servlet-api/4.0.3/jakarta.servlet-api-4.0.3.jar&quot;, :dependents [env/core], :paths [&quot;/Users/tengstrand/.m2/repository/jakarta/servlet/jakarta.servlet-api/4.0.3/jakarta.servlet-api-4.0.3.jar&quot;], :children ()}, org.clojure/tools.reader {:mvn/version &quot;1.0.0-beta4&quot;, :deps/manifest :mvn, :dependents [org.clojure/tools.analyzer.jvm], :paths [&quot;/Users/tengstrand/.m2/repository/org/clojure/tools.reader/1.0.0-beta4/tools.reader-1.0.0-beta4.jar&quot;], :children ()}, org.jetbrains.kotlin/kotlin-reflect {:mvn/version &quot;1.3.72&quot;, :deps/manifest :mvn, :dependents [org.jetbrains.kotlin/kotlin-compiler-embeddable], :paths [&quot;/Users/tengstrand/.m2/repository/org/jetbrains/kotlin/kotlin-reflect/1.3.72/kotlin-reflect-1.3.72.jar&quot;], :children ()}, org.jetbrains.kotlin/kotlin-script-runtime {:mvn/version &quot;1.3.72&quot;, :deps/manifest :mvn, :dependents [org.jetbrains.kotlin/kotlin-compiler-embeddable], :paths [&quot;/Users/tengstrand/.m2/repository/org/jetbrains/kotlin/kotlin-script-runtime/1.3.72/kotlin-script-runtime-1.3.72.jar&quot;], :children ()}, net.java.dev.jna/jna-platform {:mvn/version &quot;4.1.0&quot;, :deps/manifest :mvn, :dependents [com.jcraft/jsch.agentproxy.usocket-jna], :paths [&quot;/Users/tengstrand/.m2/repository/net/java/dev/jna/jna-platform/4.1.0/jna-platform-4.1.0.jar&quot;], :children ()}, org.clojure/tools.gitlibs {:mvn/version &quot;0.2.64&quot;, :deps/manifest :mvn, :dependents [org.clojure/tools.deps.alpha], :paths [&quot;/Users/tengstrand/.m2/repository/org/clojure/tools.gitlibs/0.2.64/tools.gitlibs-0.2.64.jar&quot;], :children (com.jcraft/jsch.agentproxy.jsch org.eclipse.jgit/org.eclipse.jgit com.jcraft/jsch.agentproxy.connector-factory)}, org.apache.maven.resolver/maven-resolver-connector-basic {:mvn/version &quot;1.4.1&quot;, :deps/manifest :mvn, :dependents [org.clojure/tools.deps.alpha], :paths [&quot;/Users/tengstrand/.m2/repository/org/apache/maven/resolver/maven-resolver-connector-basic/1.4.1/maven-resolver-connector-basic-1.4.1.jar&quot;], :children ()}, com.cognitect.aws/s3 {:mvn/version &quot;784.2.593.0&quot;, :deps/manifest :mvn, :dependents [org.clojure/tools.deps.alpha], :paths [&quot;/Users/tengstrand/.m2/repository/com/cognitect/aws/s3/784.2.593.0/s3-784.2.593.0.jar&quot;], :children ()}, org.apache.maven.resolver/maven-resolver-impl {:mvn/version &quot;1.4.1&quot;, :deps/manifest :mvn, :dependents [org.clojure/tools.deps.alpha], :paths [&quot;/Users/tengstrand/.m2/repository/org/apache/maven/resolver/maven-resolver-impl/1.4.1/maven-resolver-impl-1.4.1.jar&quot;], :children ()}, org.slf4j/slf4j-api {:mvn/version &quot;1.7.29&quot;, :deps/manifest :mvn, :dependents [org.apache.maven/maven-resolver-provider], :paths [&quot;/Users/tengstrand/.m2/repository/org/slf4j/slf4j-api/1.7.29/slf4j-api-1.7.29.jar&quot;], :children ()}, org.apache.maven/maven-model {:mvn/version &quot;3.6.3&quot;, :deps/manifest :mvn, :dependents [org.apache.maven/maven-resolver-provider], :paths [&quot;/Users/tengstrand/.m2/repository/org/apache/maven/maven-model/3.6.3/maven-model-3.6.3.jar&quot;], :children ()}, org.eclipse.sisu/org.eclipse.sisu.inject {:mvn/version &quot;0.3.4&quot;, :deps/manifest :mvn, :dependents [org.apache.maven/maven-core], :paths [&quot;/Users/tengstrand/.m2/repository/org/eclipse/sisu/org.eclipse.sisu.inject/0.3.4/org.eclipse.sisu.inject-0.3.4.jar&quot;], :children ()}, org.apache.maven.resolver/maven-resolver-util {:mvn/version &quot;1.4.1&quot;, :deps/manifest :mvn, :dependents [org.clojure/tools.deps.alpha], :paths [&quot;/Users/tengstrand/.m2/repository/org/apache/maven/resolver/maven-resolver-util/1.4.1/maven-resolver-util-1.4.1.jar&quot;], :children ()}, org.clojure/core.memoize {:mvn/version &quot;0.5.9&quot;, :deps/manifest :mvn, :dependents [org.clojure/tools.analyzer.jvm], :paths [&quot;/Users/tengstrand/.m2/repository/org/clojure/core.memoize/0.5.9/core.memoize-0.5.9.jar&quot;], :children (org.clojure/core.cache)}, org.apache.maven/maven-repository-metadata {:mvn/version &quot;3.6.3&quot;, :deps/manifest :mvn, :dependents [org.apache.maven/maven-resolver-provider], :paths [&quot;/Users/tengstrand/.m2/repository/org/apache/maven/maven-repository-metadata/3.6.3/maven-repository-metadata-3.6.3.jar&quot;], :children ()}, org.clojure/data.priority-map {:mvn/version &quot;0.0.7&quot;, :deps/manifest :mvn, :dependents [org.clojure/core.cache], :paths [&quot;/Users/tengstrand/.m2/repository/org/clojure/data.priority-map/0.0.7/data.priority-map-0.0.7.jar&quot;], :children ()}, aopalliance/aopalliance {:mvn/version &quot;1.0&quot;, :deps/manifest :mvn, :dependents [com.google.inject/guice$no_aop], :paths [&quot;/Users/tengstrand/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar&quot;], :children ()}, org.apache.maven/maven-builder-support {:mvn/version &quot;3.6.3&quot;, :deps/manifest :mvn, :dependents [org.apache.maven/maven-core], :paths [&quot;/Users/tengstrand/.m2/repository/org/apache/maven/maven-builder-support/3.6.3/maven-builder-support-3.6.3.jar&quot;], :children ()}, com.google.code.findbugs/jsr305 {:mvn/version &quot;3.0.2&quot;, :deps/manifest :mvn, :dependents [com.google.guava/guava], :paths [&quot;/Users/tengstrand/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar&quot;], :children ()}, com.jcraft/jsch {:mvn/version &quot;0.1.54&quot;, :deps/manifest :mvn, :dependents [org.eclipse.jgit/org.eclipse.jgit], :paths [&quot;/Users/tengstrand/.m2/repository/com/jcraft/jsch/0.1.54/jsch-0.1.54.jar&quot;], :children ()}, com.jcraft/jsch.agentproxy.core {:mvn/version &quot;0.0.9&quot;, :deps/manifest :mvn, :dependents [com.jcraft/jsch.agentproxy.connector-factory], :paths [&quot;/Users/tengstrand/.m2/repository/com/jcraft/jsch.agentproxy.core/0.0.9/jsch.agentproxy.core-0.0.9.jar&quot;], :children ()}, com.jcraft/jsch.agentproxy.usocket-nc {:mvn/version &quot;0.0.9&quot;, :deps/manifest :mvn, :dependents [com.jcraft/jsch.agentproxy.connector-factory], :paths [&quot;/Users/tengstrand/.m2/repository/com/jcraft/jsch.agentproxy.usocket-nc/0.0.9/jsch.agentproxy.usocket-nc-0.0.9.jar&quot;], :children ()}, org.clojure/core.cache {:mvn/version &quot;0.6.5&quot;, :deps/manifest :mvn, :dependents [org.clojure/core.memoize], :paths [&quot;/Users/tengstrand/.m2/repository/org/clojure/core.cache/0.6.5/core.cache-0.6.5.jar&quot;], :children (org.clojure/data.priority-map)}, org.ow2.asm/asm-all {:mvn/version &quot;4.2&quot;, :deps/manifest :mvn, :dependents [org.clojure/tools.analyzer.jvm], :paths [&quot;/Users/tengstrand/.m2/repository/org/ow2/asm/asm-all/4.2/asm-all-4.2.jar&quot;], :children ()}, org.apache.maven/maven-plugin-api {:mvn/version &quot;3.6.3&quot;, :deps/manifest :mvn, :dependents [org.apache.maven/maven-core], :paths [&quot;/Users/tengstrand/.m2/repository/org/apache/maven/maven-plugin-api/3.6.3/maven-plugin-api-3.6.3.jar&quot;], :children ()}, org.clojure/core.async {:mvn/version &quot;0.5.527&quot;, :deps/manifest :mvn, :dependents [com.cognitect.aws/api], :paths [&quot;/Users/tengstrand/.m2/repository/org/clojure/core.async/0.5.527/core.async-0.5.527.jar&quot;], :children (org.clojure/tools.analyzer.jvm)}, org.jetbrains.kotlin/kotlin-daemon-embeddable {:mvn/version &quot;1.3.72&quot;, :deps/manifest :mvn, :dependents [org.jetbrains.kotlin/kotlin-compiler-embeddable], :paths [&quot;/Users/tengstrand/.m2/repository/org/jetbrains/kotlin/kotlin-daemon-embeddable/1.3.72/kotlin-daemon-embeddable-1.3.72.jar&quot;], :children ()}, org.apache.maven/maven-artifact {:mvn/version &quot;3.6.3&quot;, :deps/manifest :mvn, :dependents [org.apache.maven/maven-core], :paths [&quot;/Users/tengstrand/.m2/repository/org/apache/maven/maven-artifact/3.6.3/maven-artifact-3.6.3.jar&quot;], :children ()}, org.clojure/data.codec {:mvn/version &quot;0.1.0&quot;, :deps/manifest :mvn, :dependents [org.clojure/data.xml], :paths [&quot;/Users/tengstrand/.m2/repository/org/clojure/data.codec/0.1.0/data.codec-0.1.0.jar&quot;], :children ()}}}" />
              <option name="hash" value="49a07be3cde6ebf0ae73d8443ca8b51f" />
            </ModuleDetails>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/environments/core/deps.edn">
          <value>
            <ModuleDetails>
              <option name="details" value="{:paths [&quot;../../bases/cli/src&quot; &quot;../../components/change/src&quot; &quot;../../components/common/src&quot; &quot;../../components/deps/src&quot; &quot;../../components/file/src&quot; &quot;../../components/git/src&quot; &quot;../../components/shell/src&quot; &quot;../../components/spec/src&quot; &quot;../../components/test-runner/src&quot; &quot;../../components/util/src&quot; &quot;../../components/validate/src&quot; &quot;../../components/workspace/src&quot; &quot;../../components/workspace-clj/src&quot; &quot;../../components/workspace-kotlin/src&quot;], :deps {org.clojure/clojure {:mvn/version &quot;1.10.1&quot;}, org.clojure/tools.deps.alpha {:mvn/version &quot;0.8.695&quot;}, org.jetbrains.kotlin/kotlin-compiler-embeddable {:mvn/version &quot;1.3.72&quot;}, kotlin/src-reader {:local/root &quot;/Users/tengstrand/source/polylith-kotlin/build/libs/polylith-kotlin.jar&quot;}, jakarta/jar {:local/root &quot;/Users/tengstrand/.m2/repository/jakarta/servlet/jakarta.servlet-api/4.0.3/jakarta.servlet-api-4.0.3.jar&quot;}}, :aliases {:deps {:extra-deps {org.clojure/tools.deps.alpha {:mvn/version &quot;0.8.677&quot;}}}, :test {:extra-paths [&quot;../../bases/cli/test&quot; &quot;../../components/change/test&quot; &quot;../../components/common/test&quot; &quot;../../components/deps/test&quot; &quot;../../components/file/test&quot; &quot;../../components/git/test&quot; &quot;../../components/shell/test&quot; &quot;../../components/spec/test&quot; &quot;../../components/test-runner/test&quot; &quot;../../components/util/test&quot; &quot;../../components/validate/test&quot; &quot;../../components/workspace/test&quot; &quot;../../components/workspace-clj/test&quot; &quot;../../components/workspace-kotlin/test&quot;], :extra-deps {}}, :aot {:extra-paths [&quot;classes&quot;], :main-opts [&quot;-e&quot; &quot;(compile,'polylith.cli.poly)&quot;]}, :uberjar {:extra-deps {uberdeps/uberdeps {:mvn/version &quot;0.1.10&quot;}}, :main-opts [&quot;-m&quot; &quot;uberdeps.uberjar&quot;]}}, :mvn/repos {&quot;central&quot; {:url &quot;https://repo1.maven.org/maven2/&quot;}, &quot;clojars&quot; {:url &quot;https://repo.clojars.org/&quot;}}, :system-aliases #{:test :deps}, :deps-tree {javax.inject/javax.inject {:mvn/version &quot;1&quot;, :deps/manifest :mvn, :dependents [org.clojure/tools.deps.alpha], :paths [&quot;/Users/tengstrand/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar&quot;], :children ()}, org.clojure/data.json {:mvn/version &quot;0.2.7&quot;, :deps/manifest :mvn, :dependents [com.cognitect.aws/api], :paths [&quot;/Users/tengstrand/.m2/repository/org/clojure/data.json/0.2.7/data.json-0.2.7.jar&quot;], :children ()}, org.clojure/clojure {:mvn/version &quot;1.10.1&quot;, :deps/manifest :mvn, :paths [&quot;/Users/tengstrand/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar&quot;], :children (org.clojure/core.specs.alpha org.clojure/spec.alpha)}, kotlin/src-reader {:local/root &quot;/Users/tengstrand/source/polylith-kotlin/build/libs/polylith-kotlin.jar&quot;, :deps/manifest :jar, :deps/root &quot;/Users/tengstrand/source/polylith-kotlin/build/libs/polylith-kotlin.jar&quot;, :paths [&quot;/Users/tengstrand/source/polylith-kotlin/build/libs/polylith-kotlin.jar&quot;], :children ()}, commons-codec/commons-codec {:mvn/version &quot;1.13&quot;, :deps/manifest :mvn, :dependents [com.cognitect.aws/api], :paths [&quot;/Users/tengstrand/.m2/repository/commons-codec/commons-codec/1.13/commons-codec-1.13.jar&quot;], :children ()}, com.cognitect.aws/api {:mvn/version &quot;0.8.408&quot;, :deps/manifest :mvn, :dependents [org.clojure/tools.deps.alpha], :paths [&quot;/Users/tengstrand/.m2/repository/com/cognitect/aws/api/0.8.408/api-0.8.408.jar&quot;], :children (org.clojure/data.json commons-codec/commons-codec org.clojure/tools.logging com.cognitect/http-client org.clojure/core.async)}, org.clojure/tools.analyzer {:mvn/version &quot;0.6.9&quot;, :deps/manifest :mvn, :dependents [org.clojure/tools.analyzer.jvm], :paths [&quot;/Users/tengstrand/.m2/repository/org/clojure/tools.analyzer/0.6.9/tools.analyzer-0.6.9.jar&quot;], :children ()}, org.codehaus.plexus/plexus-component-annotations {:mvn/version &quot;2.1.0&quot;, :exclusions #{junit/junit}, :deps/manifest :mvn, :dependents [org.apache.maven/maven-core], :paths [&quot;/Users/tengstrand/.m2/repository/org/codehaus/plexus/plexus-component-annotations/2.1.0/plexus-component-annotations-2.1.0.jar&quot;], :children ()}, com.cognitect.aws/endpoints {:mvn/version &quot;1.1.11.705&quot;, :deps/manifest :mvn, :dependents [org.clojure/tools.deps.alpha], :paths [&quot;/Users/tengstrand/.m2/repository/com/cognitect/aws/endpoints/1.1.11.705/endpoints-1.1.11.705.jar&quot;], :children ()}, com.google.errorprone/error_prone_annotations {:mvn/version &quot;2.1.3&quot;, :deps/manifest :mvn, :dependents [com.google.guava/guava], :paths [&quot;/Users/tengstrand/.m2/repository/com/google/errorprone/error_prone_annotations/2.1.3/error_prone_annotations-2.1.3.jar&quot;], :children ()}, org.apache.commons/commons-lang3 {:mvn/version &quot;3.8.1&quot;, :deps/manifest :mvn, :dependents [org.apache.maven/maven-core], :paths [&quot;/Users/tengstrand/.m2/repository/org/apache/commons/commons-lang3/3.8.1/commons-lang3-3.8.1.jar&quot;], :children ()}, org.clojure/tools.logging {:mvn/version &quot;0.5.0&quot;, :deps/manifest :mvn, :dependents [com.cognitect.aws/api], :paths [&quot;/Users/tengstrand/.m2/repository/org/clojure/tools.logging/0.5.0/tools.logging-0.5.0.jar&quot;], :children ()}, org.clojure/core.specs.alpha {:mvn/version &quot;0.2.44&quot;, :deps/manifest :mvn, :dependents [org.clojure/clojure], :paths [&quot;/Users/tengstrand/.m2/repository/org/clojure/core.specs.alpha/0.2.44/core.specs.alpha-0.2.44.jar&quot;], :children ()}, org.clojure/spec.alpha {:mvn/version &quot;0.2.176&quot;, :deps/manifest :mvn, :dependents [org.clojure/clojure], :paths [&quot;/Users/tengstrand/.m2/repository/org/clojure/spec.alpha/0.2.176/spec.alpha-0.2.176.jar&quot;], :children ()}, org.clojure/tools.cli {:mvn/version &quot;0.4.2&quot;, :deps/manifest :mvn, :dependents [org.clojure/tools.deps.alpha], :paths [&quot;/Users/tengstrand/.m2/repository/org/clojure/tools.cli/0.4.2/tools.cli-0.4.2.jar&quot;], :children ()}, org.jetbrains.kotlin/kotlin-stdlib {:mvn/version &quot;1.3.72&quot;, :deps/manifest :mvn, :dependents [org.jetbrains.kotlin/kotlin-compiler-embeddable], :paths [&quot;/Users/tengstrand/.m2/repository/org/jetbrains/kotlin/kotlin-stdlib/1.3.72/kotlin-stdlib-1.3.72.jar&quot;], :children (org.jetbrains/annotations org.jetbrains.kotlin/kotlin-stdlib-common)}, org.codehaus.mojo/animal-sniffer-annotations {:mvn/version &quot;1.14&quot;, :deps/manifest :mvn, :dependents [com.google.guava/guava], :paths [&quot;/Users/tengstrand/.m2/repository/org/codehaus/mojo/animal-sniffer-annotations/1.14/animal-sniffer-annotations-1.14.jar&quot;], :children ()}, org.eclipse.jetty/jetty-http {:mvn/version &quot;9.4.15.v20190215&quot;, :deps/manifest :mvn, :dependents [com.cognitect/http-client], :paths [&quot;/Users/tengstrand/.m2/repository/org/eclipse/jetty/jetty-http/9.4.15.v20190215/jetty-http-9.4.15.v20190215.jar&quot;], :children ()}, org.eclipse.jetty/jetty-util {:mvn/version &quot;9.4.15.v20190215&quot;, :deps/manifest :mvn, :dependents [com.cognitect/http-client], :paths [&quot;/Users/tengstrand/.m2/repository/org/eclipse/jetty/jetty-util/9.4.15.v20190215/jetty-util-9.4.15.v20190215.jar&quot;], :children ()}, org.slf4j/jcl-over-slf4j {:mvn/version &quot;1.7.25&quot;, :deps/manifest :mvn, :dependents [org.apache.maven.resolver/maven-resolver-transport-http], :paths [&quot;/Users/tengstrand/.m2/repository/org/slf4j/jcl-over-slf4j/1.7.25/jcl-over-slf4j-1.7.25.jar&quot;], :children ()}, org.clojure/tools.analyzer.jvm {:mvn/version &quot;0.7.2&quot;, :deps/manifest :mvn, :dependents [org.clojure/core.async], :paths [&quot;/Users/tengstrand/.m2/repository/org/clojure/tools.analyzer.jvm/0.7.2/tools.analyzer.jvm-0.7.2.jar&quot;], :children (org.clojure/tools.analyzer org.clojure/tools.reader org.clojure/core.memoize org.ow2.asm/asm-all)}, com.jcraft/jsch.agentproxy.jsch {:mvn/version &quot;0.0.9&quot;, :deps/manifest :mvn, :dependents [org.clojure/tools.gitlibs], :paths [&quot;/Users/tengstrand/.m2/repository/com/jcraft/jsch.agentproxy.jsch/0.0.9/jsch.agentproxy.jsch-0.0.9.jar&quot;], :children ()}, com.jcraft/jsch.agentproxy.sshagent {:mvn/version &quot;0.0.9&quot;, :deps/manifest :mvn, :dependents [com.jcraft/jsch.agentproxy.connector-factory], :paths [&quot;/Users/tengstrand/.m2/repository/com/jcraft/jsch.agentproxy.sshagent/0.0.9/jsch.agentproxy.sshagent-0.0.9.jar&quot;], :children ()}, org.apache.maven.resolver/maven-resolver-transport-http {:mvn/version &quot;1.4.1&quot;, :deps/manifest :mvn, :dependents [org.clojure/tools.deps.alpha], :paths [&quot;/Users/tengstrand/.m2/repository/org/apache/maven/resolver/maven-resolver-transport-http/1.4.1/maven-resolver-transport-http-1.4.1.jar&quot;], :children (org.slf4j/jcl-over-slf4j org.apache.httpcomponents/httpcore org.apache.httpcomponents/httpclient)}, org.apache.maven/maven-model-builder {:mvn/version &quot;3.6.3&quot;, :deps/manifest :mvn, :dependents [org.apache.maven/maven-resolver-provider], :paths [&quot;/Users/tengstrand/.m2/repository/org/apache/maven/maven-model-builder/3.6.3/maven-model-builder-3.6.3.jar&quot;], :children (org.codehaus.plexus/plexus-interpolation)}, com.googlecode.javaewah/JavaEWAH {:mvn/version &quot;1.1.6&quot;, :deps/manifest :mvn, :dependents [org.eclipse.jgit/org.eclipse.jgit], :paths [&quot;/Users/tengstrand/.m2/repository/com/googlecode/javaewah/JavaEWAH/1.1.6/JavaEWAH-1.1.6.jar&quot;], :children ()}, org.codehaus.plexus/plexus-utils {:mvn/version &quot;3.2.1&quot;, :deps/manifest :mvn, :dependents [org.apache.maven/maven-resolver-provider], :paths [&quot;/Users/tengstrand/.m2/repository/org/codehaus/plexus/plexus-utils/3.2.1/plexus-utils-3.2.1.jar&quot;], :children ()}, org.apache.maven.resolver/maven-resolver-transport-file {:mvn/version &quot;1.4.1&quot;, :deps/manifest :mvn, :dependents [org.clojure/tools.deps.alpha], :paths [&quot;/Users/tengstrand/.m2/repository/org/apache/maven/resolver/maven-resolver-transport-file/1.4.1/maven-resolver-transport-file-1.4.1.jar&quot;], :children ()}, org.eclipse.sisu/org.eclipse.sisu.plexus {:mvn/version &quot;0.3.4&quot;, :deps/manifest :mvn, :dependents [org.apache.maven/maven-core], :paths [&quot;/Users/tengstrand/.m2/repository/org/eclipse/sisu/org.eclipse.sisu.plexus/0.3.4/org.eclipse.sisu.plexus-0.3.4.jar&quot;], :children (javax.enterprise/cdi-api)}, org.jetbrains/annotations {:mvn/version &quot;13.0&quot;, :deps/manifest :mvn, :dependents [org.jetbrains.kotlin/kotlin-stdlib], :paths [&quot;/Users/tengstrand/.m2/repository/org/jetbrains/annotations/13.0/annotations-13.0.jar&quot;], :children ()}, com.jcraft/jsch.agentproxy.usocket-jna {:mvn/version &quot;0.0.9&quot;, :deps/manifest :mvn, :dependents [com.jcraft/jsch.agentproxy.connector-factory], :paths [&quot;/Users/tengstrand/.m2/repository/com/jcraft/jsch.agentproxy.usocket-jna/0.0.9/jsch.agentproxy.usocket-jna-0.0.9.jar&quot;], :children (net.java.dev.jna/jna net.java.dev.jna/jna-platform)}, commons-io/commons-io {:mvn/version &quot;2.5&quot;, :deps/manifest :mvn, :dependents [org.apache.maven.shared/maven-shared-utils], :paths [&quot;/Users/tengstrand/.m2/repository/commons-io/commons-io/2.5/commons-io-2.5.jar&quot;], :children ()}, org.apache.maven/maven-settings-builder {:mvn/version &quot;3.6.3&quot;, :deps/manifest :mvn, :dependents [org.apache.maven/maven-core], :paths [&quot;/Users/tengstrand/.m2/repository/org/apache/maven/maven-settings-builder/3.6.3/maven-settings-builder-3.6.3.jar&quot;], :children (org.sonatype.plexus/plexus-sec-dispatcher)}, org.eclipse.jgit/org.eclipse.jgit {:mvn/version &quot;4.10.0.201712302008-r&quot;, :deps/manifest :mvn, :dependents [org.clojure/tools.gitlibs], :paths [&quot;/Users/tengstrand/.m2/repository/org/eclipse/jgit/org.eclipse.jgit/4.10.0.201712302008-r/org.eclipse.jgit-4.10.0.201712302008-r.jar&quot;], :children (com.googlecode.javaewah/JavaEWAH com.jcraft/jsch)}, javax.enterprise/cdi-api {:mvn/version &quot;1.0&quot;, :exclusions #{org.jboss.interceptor/jboss-interceptor-api javax.el/el-api org.jboss.ejb3/jboss-ejb3-api}, :deps/manifest :mvn, :dependents [org.eclipse.sisu/org.eclipse.sisu.plexus], :paths [&quot;/Users/tengstrand/.m2/repository/javax/enterprise/cdi-api/1.0/cdi-api-1.0.jar&quot;], :children (javax.annotation/jsr250-api)}, org.apache.maven/maven-settings {:mvn/version &quot;3.6.3&quot;, :deps/manifest :mvn, :dependents [org.apache.maven/maven-core], :paths [&quot;/Users/tengstrand/.m2/repository/org/apache/maven/maven-settings/3.6.3/maven-settings-3.6.3.jar&quot;], :children ()}, org.apache.httpcomponents/httpcore {:mvn/version &quot;4.4.10&quot;, :deps/manifest :mvn, :dependents [org.apache.maven.resolver/maven-resolver-transport-http], :paths [&quot;/Users/tengstrand/.m2/repository/org/apache/httpcomponents/httpcore/4.4.10/httpcore-4.4.10.jar&quot;], :children ()}, org.apache.maven/maven-core {:mvn/version &quot;3.6.3&quot;, :deps/manifest :mvn, :dependents [org.clojure/tools.deps.alpha], :paths [&quot;/Users/tengstrand/.m2/repository/org/apache/maven/maven-core/3.6.3/maven-core-3.6.3.jar&quot;], :children (org.codehaus.plexus/plexus-component-annotations org.apache.commons/commons-lang3 org.eclipse.sisu/org.eclipse.sisu.plexus org.apache.maven/maven-settings-builder org.apache.maven/maven-settings org.apache.maven.shared/maven-shared-utils org.codehaus.plexus/plexus-classworlds com.google.inject/guice$no_aop org.eclipse.sisu/org.eclipse.sisu.inject org.apache.maven/maven-builder-support org.apache.maven/maven-plugin-api org.apache.maven/maven-artifact)}, org.sonatype.plexus/plexus-cipher {:mvn/version &quot;1.4&quot;, :deps/manifest :mvn, :dependents [org.sonatype.plexus/plexus-sec-dispatcher], :paths [&quot;/Users/tengstrand/.m2/repository/org/sonatype/plexus/plexus-cipher/1.4/plexus-cipher-1.4.jar&quot;], :children ()}, com.jcraft/jsch.agentproxy.pageant {:mvn/version &quot;0.0.9&quot;, :deps/manifest :mvn, :dependents [com.jcraft/jsch.agentproxy.connector-factory], :paths [&quot;/Users/tengstrand/.m2/repository/com/jcraft/jsch.agentproxy.pageant/0.0.9/jsch.agentproxy.pageant-0.0.9.jar&quot;], :children ()}, org.apache.maven.resolver/maven-resolver-api {:mvn/version &quot;1.4.1&quot;, :deps/manifest :mvn, :dependents [org.clojure/tools.deps.alpha], :paths [&quot;/Users/tengstrand/.m2/repository/org/apache/maven/resolver/maven-resolver-api/1.4.1/maven-resolver-api-1.4.1.jar&quot;], :children ()}, javax.annotation/jsr250-api {:mvn/version &quot;1.0&quot;, :deps/manifest :mvn, :dependents [javax.enterprise/cdi-api], :paths [&quot;/Users/tengstrand/.m2/repository/javax/annotation/jsr250-api/1.0/jsr250-api-1.0.jar&quot;], :children ()}, com.cognitect/http-client {:mvn/version &quot;0.1.101&quot;, :deps/manifest :mvn, :dependents [com.cognitect.aws/api], :paths [&quot;/Users/tengstrand/.m2/repository/com/cognitect/http-client/0.1.101/http-client-0.1.101.jar&quot;], :children (org.eclipse.jetty/jetty-http org.eclipse.jetty/jetty-util org.eclipse.jetty/jetty-client)}, org.apache.maven/maven-resolver-provider {:mvn/version &quot;3.6.3&quot;, :deps/manifest :mvn, :dependents [org.clojure/tools.deps.alpha], :paths [&quot;/Users/tengstrand/.m2/repository/org/apache/maven/maven-resolver-provider/3.6.3/maven-resolver-provider-3.6.3.jar&quot;], :children (org.apache.maven/maven-model-builder org.codehaus.plexus/plexus-utils org.slf4j/slf4j-api org.apache.maven/maven-model org.apache.maven/maven-repository-metadata)}, org.checkerframework/checker-compat-qual {:mvn/version &quot;2.0.0&quot;, :deps/manifest :mvn, :dependents [com.google.guava/guava], :paths [&quot;/Users/tengstrand/.m2/repository/org/checkerframework/checker-compat-qual/2.0.0/checker-compat-qual-2.0.0.jar&quot;], :children ()}, org.apache.maven.shared/maven-shared-utils {:mvn/version &quot;3.2.1&quot;, :deps/manifest :mvn, :dependents [org.apache.maven/maven-core], :paths [&quot;/Users/tengstrand/.m2/repository/org/apache/maven/shared/maven-shared-utils/3.2.1/maven-shared-utils-3.2.1.jar&quot;], :children (commons-io/commons-io)}, org.clojure/tools.deps.alpha {:mvn/version &quot;0.8.677&quot;, :deps/manifest :mvn, :paths [&quot;/Users/tengstrand/.m2/repository/org/clojure/tools.deps.alpha/0.8.677/tools.deps.alpha-0.8.677.jar&quot;], :children (javax.inject/javax.inject com.cognitect.aws/api com.cognitect.aws/endpoints org.clojure/tools.cli org.apache.maven.resolver/maven-resolver-transport-http org.apache.maven.resolver/maven-resolver-transport-file org.apache.maven/maven-core org.apache.maven.resolver/maven-resolver-api org.apache.maven/maven-resolver-provider org.clojure/data.xml org.apache.maven.resolver/maven-resolver-spi org.clojure/tools.gitlibs org.apache.maven.resolver/maven-resolver-connector-basic com.cognitect.aws/s3 org.apache.maven.resolver/maven-resolver-impl org.apache.maven.resolver/maven-resolver-util)}, com.google.guava/guava {:mvn/version &quot;25.1-android&quot;, :deps/manifest :mvn, :dependents [com.google.inject/guice$no_aop], :paths [&quot;/Users/tengstrand/.m2/repository/com/google/guava/guava/25.1-android/guava-25.1-android.jar&quot;], :children (com.google.errorprone/error_prone_annotations org.codehaus.mojo/animal-sniffer-annotations org.checkerframework/checker-compat-qual com.google.j2objc/j2objc-annotations com.google.code.findbugs/jsr305)}, org.clojure/data.xml {:mvn/version &quot;0.2.0-alpha6&quot;, :deps/manifest :mvn, :dependents [org.clojure/tools.deps.alpha], :paths [&quot;/Users/tengstrand/.m2/repository/org/clojure/data.xml/0.2.0-alpha6/data.xml-0.2.0-alpha6.jar&quot;], :children (org.clojure/data.codec)}, org.apache.maven.resolver/maven-resolver-spi {:mvn/version &quot;1.4.1&quot;, :deps/manifest :mvn, :dependents [org.clojure/tools.deps.alpha], :paths [&quot;/Users/tengstrand/.m2/repository/org/apache/maven/resolver/maven-resolver-spi/1.4.1/maven-resolver-spi-1.4.1.jar&quot;], :children ()}, org.jetbrains.intellij.deps/trove4j {:mvn/version &quot;1.0.20181211&quot;, :deps/manifest :mvn, :dependents [org.jetbrains.kotlin/kotlin-compiler-embeddable], :paths [&quot;/Users/tengstrand/.m2/repository/org/jetbrains/intellij/deps/trove4j/1.0.20181211/trove4j-1.0.20181211.jar&quot;], :children ()}, com.google.j2objc/j2objc-annotations {:mvn/version &quot;1.1&quot;, :deps/manifest :mvn, :dependents [com.google.guava/guava], :paths [&quot;/Users/tengstrand/.m2/repository/com/google/j2objc/j2objc-annotations/1.1/j2objc-annotations-1.1.jar&quot;], :children ()}, org.codehaus.plexus/plexus-classworlds {:mvn/version &quot;2.6.0&quot;, :deps/manifest :mvn, :dependents [org.apache.maven/maven-core], :paths [&quot;/Users/tengstrand/.m2/repository/org/codehaus/plexus/plexus-classworlds/2.6.0/plexus-classworlds-2.6.0.jar&quot;], :children ()}, org.jetbrains.kotlin/kotlin-compiler-embeddable {:mvn/version &quot;1.3.72&quot;, :deps/manifest :mvn, :paths [&quot;/Users/tengstrand/.m2/repository/org/jetbrains/kotlin/kotlin-compiler-embeddable/1.3.72/kotlin-compiler-embeddable-1.3.72.jar&quot;], :children (org.jetbrains.kotlin/kotlin-stdlib org.jetbrains.intellij.deps/trove4j org.jetbrains.kotlin/kotlin-reflect org.jetbrains.kotlin/kotlin-script-runtime org.jetbrains.kotlin/kotlin-daemon-embeddable)}, org.sonatype.plexus/plexus-sec-dispatcher {:mvn/version &quot;1.4&quot;, :deps/manifest :mvn, :dependents [org.apache.maven/maven-settings-builder], :paths [&quot;/Users/tengstrand/.m2/repository/org/sonatype/plexus/plexus-sec-dispatcher/1.4/plexus-sec-dispatcher-1.4.jar&quot;], :children (org.sonatype.plexus/plexus-cipher)}, org.codehaus.plexus/plexus-interpolation {:mvn/version &quot;1.25&quot;, :deps/manifest :mvn, :dependents [org.apache.maven/maven-model-builder], :paths [&quot;/Users/tengstrand/.m2/repository/org/codehaus/plexus/plexus-interpolation/1.25/plexus-interpolation-1.25.jar&quot;], :children ()}, org.apache.httpcomponents/httpclient {:mvn/version &quot;4.5.6&quot;, :exclusions #{commons-logging/commons-logging}, :deps/manifest :mvn, :dependents [org.apache.maven.resolver/maven-resolver-transport-http], :paths [&quot;/Users/tengstrand/.m2/repository/org/apache/httpcomponents/httpclient/4.5.6/httpclient-4.5.6.jar&quot;], :children ()}, net.java.dev.jna/jna {:mvn/version &quot;4.1.0&quot;, :deps/manifest :mvn, :dependents [com.jcraft/jsch.agentproxy.usocket-jna], :paths [&quot;/Users/tengstrand/.m2/repository/net/java/dev/jna/jna/4.1.0/jna-4.1.0.jar&quot;], :children ()}, com.google.inject/guice$no_aop {:mvn/version &quot;4.2.1&quot;, :deps/manifest :mvn, :dependents [org.apache.maven/maven-core], :paths [&quot;/Users/tengstrand/.m2/repository/com/google/inject/guice/4.2.1/guice-4.2.1-no_aop.jar&quot;], :children (com.google.guava/guava aopalliance/aopalliance)}, org.jetbrains.kotlin/kotlin-stdlib-common {:mvn/version &quot;1.3.72&quot;, :deps/manifest :mvn, :dependents [org.jetbrains.kotlin/kotlin-stdlib], :paths [&quot;/Users/tengstrand/.m2/repository/org/jetbrains/kotlin/kotlin-stdlib-common/1.3.72/kotlin-stdlib-common-1.3.72.jar&quot;], :children ()}, com.jcraft/jsch.agentproxy.connector-factory {:mvn/version &quot;0.0.9&quot;, :deps/manifest :mvn, :dependents [org.clojure/tools.gitlibs], :paths [&quot;/Users/tengstrand/.m2/repository/com/jcraft/jsch.agentproxy.connector-factory/0.0.9/jsch.agentproxy.connector-factory-0.0.9.jar&quot;], :children (com.jcraft/jsch.agentproxy.sshagent com.jcraft/jsch.agentproxy.usocket-jna com.jcraft/jsch.agentproxy.pageant com.jcraft/jsch.agentproxy.core com.jcraft/jsch.agentproxy.usocket-nc)}, org.eclipse.jetty/jetty-client {:mvn/version &quot;9.4.15.v20190215&quot;, :deps/manifest :mvn, :dependents [com.cognitect/http-client], :paths [&quot;/Users/tengstrand/.m2/repository/org/eclipse/jetty/jetty-client/9.4.15.v20190215/jetty-client-9.4.15.v20190215.jar&quot;], :children (org.eclipse.jetty/jetty-io)}, org.eclipse.jetty/jetty-io {:mvn/version &quot;9.4.15.v20190215&quot;, :deps/manifest :mvn, :dependents [org.eclipse.jetty/jetty-client], :paths [&quot;/Users/tengstrand/.m2/repository/org/eclipse/jetty/jetty-io/9.4.15.v20190215/jetty-io-9.4.15.v20190215.jar&quot;], :children ()}, jakarta/jar {:local/root &quot;/Users/tengstrand/.m2/repository/jakarta/servlet/jakarta.servlet-api/4.0.3/jakarta.servlet-api-4.0.3.jar&quot;, :deps/manifest :jar, :deps/root &quot;/Users/tengstrand/.m2/repository/jakarta/servlet/jakarta.servlet-api/4.0.3/jakarta.servlet-api-4.0.3.jar&quot;, :paths [&quot;/Users/tengstrand/.m2/repository/jakarta/servlet/jakarta.servlet-api/4.0.3/jakarta.servlet-api-4.0.3.jar&quot;], :children ()}, org.clojure/tools.reader {:mvn/version &quot;1.0.0-beta4&quot;, :deps/manifest :mvn, :dependents [org.clojure/tools.analyzer.jvm], :paths [&quot;/Users/tengstrand/.m2/repository/org/clojure/tools.reader/1.0.0-beta4/tools.reader-1.0.0-beta4.jar&quot;], :children ()}, org.jetbrains.kotlin/kotlin-reflect {:mvn/version &quot;1.3.72&quot;, :deps/manifest :mvn, :dependents [org.jetbrains.kotlin/kotlin-compiler-embeddable], :paths [&quot;/Users/tengstrand/.m2/repository/org/jetbrains/kotlin/kotlin-reflect/1.3.72/kotlin-reflect-1.3.72.jar&quot;], :children ()}, org.jetbrains.kotlin/kotlin-script-runtime {:mvn/version &quot;1.3.72&quot;, :deps/manifest :mvn, :dependents [org.jetbrains.kotlin/kotlin-compiler-embeddable], :paths [&quot;/Users/tengstrand/.m2/repository/org/jetbrains/kotlin/kotlin-script-runtime/1.3.72/kotlin-script-runtime-1.3.72.jar&quot;], :children ()}, net.java.dev.jna/jna-platform {:mvn/version &quot;4.1.0&quot;, :deps/manifest :mvn, :dependents [com.jcraft/jsch.agentproxy.usocket-jna], :paths [&quot;/Users/tengstrand/.m2/repository/net/java/dev/jna/jna-platform/4.1.0/jna-platform-4.1.0.jar&quot;], :children ()}, org.clojure/tools.gitlibs {:mvn/version &quot;0.2.64&quot;, :deps/manifest :mvn, :dependents [org.clojure/tools.deps.alpha], :paths [&quot;/Users/tengstrand/.m2/repository/org/clojure/tools.gitlibs/0.2.64/tools.gitlibs-0.2.64.jar&quot;], :children (com.jcraft/jsch.agentproxy.jsch org.eclipse.jgit/org.eclipse.jgit com.jcraft/jsch.agentproxy.connector-factory)}, org.apache.maven.resolver/maven-resolver-connector-basic {:mvn/version &quot;1.4.1&quot;, :deps/manifest :mvn, :dependents [org.clojure/tools.deps.alpha], :paths [&quot;/Users/tengstrand/.m2/repository/org/apache/maven/resolver/maven-resolver-connector-basic/1.4.1/maven-resolver-connector-basic-1.4.1.jar&quot;], :children ()}, com.cognitect.aws/s3 {:mvn/version &quot;784.2.593.0&quot;, :deps/manifest :mvn, :dependents [org.clojure/tools.deps.alpha], :paths [&quot;/Users/tengstrand/.m2/repository/com/cognitect/aws/s3/784.2.593.0/s3-784.2.593.0.jar&quot;], :children ()}, org.apache.maven.resolver/maven-resolver-impl {:mvn/version &quot;1.4.1&quot;, :deps/manifest :mvn, :dependents [org.clojure/tools.deps.alpha], :paths [&quot;/Users/tengstrand/.m2/repository/org/apache/maven/resolver/maven-resolver-impl/1.4.1/maven-resolver-impl-1.4.1.jar&quot;], :children ()}, org.slf4j/slf4j-api {:mvn/version &quot;1.7.29&quot;, :deps/manifest :mvn, :dependents [org.apache.maven/maven-resolver-provider], :paths [&quot;/Users/tengstrand/.m2/repository/org/slf4j/slf4j-api/1.7.29/slf4j-api-1.7.29.jar&quot;], :children ()}, org.apache.maven/maven-model {:mvn/version &quot;3.6.3&quot;, :deps/manifest :mvn, :dependents [org.apache.maven/maven-resolver-provider], :paths [&quot;/Users/tengstrand/.m2/repository/org/apache/maven/maven-model/3.6.3/maven-model-3.6.3.jar&quot;], :children ()}, org.eclipse.sisu/org.eclipse.sisu.inject {:mvn/version &quot;0.3.4&quot;, :deps/manifest :mvn, :dependents [org.apache.maven/maven-core], :paths [&quot;/Users/tengstrand/.m2/repository/org/eclipse/sisu/org.eclipse.sisu.inject/0.3.4/org.eclipse.sisu.inject-0.3.4.jar&quot;], :children ()}, org.apache.maven.resolver/maven-resolver-util {:mvn/version &quot;1.4.1&quot;, :deps/manifest :mvn, :dependents [org.clojure/tools.deps.alpha], :paths [&quot;/Users/tengstrand/.m2/repository/org/apache/maven/resolver/maven-resolver-util/1.4.1/maven-resolver-util-1.4.1.jar&quot;], :children ()}, org.clojure/core.memoize {:mvn/version &quot;0.5.9&quot;, :deps/manifest :mvn, :dependents [org.clojure/tools.analyzer.jvm], :paths [&quot;/Users/tengstrand/.m2/repository/org/clojure/core.memoize/0.5.9/core.memoize-0.5.9.jar&quot;], :children (org.clojure/core.cache)}, org.apache.maven/maven-repository-metadata {:mvn/version &quot;3.6.3&quot;, :deps/manifest :mvn, :dependents [org.apache.maven/maven-resolver-provider], :paths [&quot;/Users/tengstrand/.m2/repository/org/apache/maven/maven-repository-metadata/3.6.3/maven-repository-metadata-3.6.3.jar&quot;], :children ()}, org.clojure/data.priority-map {:mvn/version &quot;0.0.7&quot;, :deps/manifest :mvn, :dependents [org.clojure/core.cache], :paths [&quot;/Users/tengstrand/.m2/repository/org/clojure/data.priority-map/0.0.7/data.priority-map-0.0.7.jar&quot;], :children ()}, aopalliance/aopalliance {:mvn/version &quot;1.0&quot;, :deps/manifest :mvn, :dependents [com.google.inject/guice$no_aop], :paths [&quot;/Users/tengstrand/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar&quot;], :children ()}, org.apache.maven/maven-builder-support {:mvn/version &quot;3.6.3&quot;, :deps/manifest :mvn, :dependents [org.apache.maven/maven-core], :paths [&quot;/Users/tengstrand/.m2/repository/org/apache/maven/maven-builder-support/3.6.3/maven-builder-support-3.6.3.jar&quot;], :children ()}, com.google.code.findbugs/jsr305 {:mvn/version &quot;3.0.2&quot;, :deps/manifest :mvn, :dependents [com.google.guava/guava], :paths [&quot;/Users/tengstrand/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar&quot;], :children ()}, com.jcraft/jsch {:mvn/version &quot;0.1.54&quot;, :deps/manifest :mvn, :dependents [org.eclipse.jgit/org.eclipse.jgit], :paths [&quot;/Users/tengstrand/.m2/repository/com/jcraft/jsch/0.1.54/jsch-0.1.54.jar&quot;], :children ()}, com.jcraft/jsch.agentproxy.core {:mvn/version &quot;0.0.9&quot;, :deps/manifest :mvn, :dependents [com.jcraft/jsch.agentproxy.connector-factory], :paths [&quot;/Users/tengstrand/.m2/repository/com/jcraft/jsch.agentproxy.core/0.0.9/jsch.agentproxy.core-0.0.9.jar&quot;], :children ()}, com.jcraft/jsch.agentproxy.usocket-nc {:mvn/version &quot;0.0.9&quot;, :deps/manifest :mvn, :dependents [com.jcraft/jsch.agentproxy.connector-factory], :paths [&quot;/Users/tengstrand/.m2/repository/com/jcraft/jsch.agentproxy.usocket-nc/0.0.9/jsch.agentproxy.usocket-nc-0.0.9.jar&quot;], :children ()}, org.clojure/core.cache {:mvn/version &quot;0.6.5&quot;, :deps/manifest :mvn, :dependents [org.clojure/core.memoize], :paths [&quot;/Users/tengstrand/.m2/repository/org/clojure/core.cache/0.6.5/core.cache-0.6.5.jar&quot;], :children (org.clojure/data.priority-map)}, org.ow2.asm/asm-all {:mvn/version &quot;4.2&quot;, :deps/manifest :mvn, :dependents [org.clojure/tools.analyzer.jvm], :paths [&quot;/Users/tengstrand/.m2/repository/org/ow2/asm/asm-all/4.2/asm-all-4.2.jar&quot;], :children ()}, org.apache.maven/maven-plugin-api {:mvn/version &quot;3.6.3&quot;, :deps/manifest :mvn, :dependents [org.apache.maven/maven-core], :paths [&quot;/Users/tengstrand/.m2/repository/org/apache/maven/maven-plugin-api/3.6.3/maven-plugin-api-3.6.3.jar&quot;], :children ()}, org.clojure/core.async {:mvn/version &quot;0.5.527&quot;, :deps/manifest :mvn, :dependents [com.cognitect.aws/api], :paths [&quot;/Users/tengstrand/.m2/repository/org/clojure/core.async/0.5.527/core.async-0.5.527.jar&quot;], :children (org.clojure/tools.analyzer.jvm)}, org.jetbrains.kotlin/kotlin-daemon-embeddable {:mvn/version &quot;1.3.72&quot;, :deps/manifest :mvn, :dependents [org.jetbrains.kotlin/kotlin-compiler-embeddable], :paths [&quot;/Users/tengstrand/.m2/repository/org/jetbrains/kotlin/kotlin-daemon-embeddable/1.3.72/kotlin-daemon-embeddable-1.3.72.jar&quot;], :children ()}, org.apache.maven/maven-artifact {:mvn/version &quot;3.6.3&quot;, :deps/manifest :mvn, :dependents [org.apache.maven/maven-core], :paths [&quot;/Users/tengstrand/.m2/repository/org/apache/maven/maven-artifact/3.6.3/maven-artifact-3.6.3.jar&quot;], :children ()}, org.clojure/data.codec {:mvn/version &quot;0.1.0&quot;, :deps/manifest :mvn, :dependents [org.clojure/data.xml], :paths [&quot;/Users/tengstrand/.m2/repository/org/clojure/data.codec/0.1.0/data.codec-0.1.0.jar&quot;], :children ()}}, :test-paths [&quot;../../bases/cli/test&quot; &quot;../../components/change/test&quot; &quot;../../components/common/test&quot; &quot;../../components/deps/test&quot; &quot;../../components/file/test&quot; &quot;../../components/git/test&quot; &quot;../../components/shell/test&quot; &quot;../../components/spec/test&quot; &quot;../../components/test-runner/test&quot; &quot;../../components/util/test&quot; &quot;../../components/validate/test&quot; &quot;../../components/workspace/test&quot; &quot;../../components/workspace-clj/test&quot; &quot;../../components/workspace-kotlin/test&quot;]}" />
              <option name="hash" value="f3b0062a3f22cb7323c52030601a7274" />
            </ModuleDetails>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Clojure Namespace" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectCodeStyleSettingsMigration">
    <option name="version" value="1" />
  </component>
  <component name="ProjectId" id="1d4rVU0CNBnwermIYXFFPAVZnsj" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="ASKED_ADD_EXTERNAL_FILES" value="true" />
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="cursive.last.file.extension./Users/tengstrand/source/polylith/bases/cli/src" value="clj" />
    <property name="cursive.last.file.extension./Users/tengstrand/source/polylith/bases/core/src" value="clj" />
    <property name="cursive.last.file.extension./Users/tengstrand/source/polylith/components/change/src" value="clj" />
    <property name="cursive.last.file.extension./Users/tengstrand/source/polylith/components/change/test" value="clj" />
    <property name="cursive.last.file.extension./Users/tengstrand/source/polylith/components/common/src" value="clj" />
    <property name="cursive.last.file.extension./Users/tengstrand/source/polylith/components/common/test" value="clj" />
    <property name="cursive.last.file.extension./Users/tengstrand/source/polylith/components/deps/src" value="clj" />
    <property name="cursive.last.file.extension./Users/tengstrand/source/polylith/components/deps/test" value="clj" />
    <property name="cursive.last.file.extension./Users/tengstrand/source/polylith/components/environment/src" value="clj" />
    <property name="cursive.last.file.extension./Users/tengstrand/source/polylith/components/environment/test" value="clj" />
    <property name="cursive.last.file.extension./Users/tengstrand/source/polylith/components/git/src" value="clj" />
    <property name="cursive.last.file.extension./Users/tengstrand/source/polylith/components/shell/src" value="clj" />
    <property name="cursive.last.file.extension./Users/tengstrand/source/polylith/components/test/src" value="clj" />
    <property name="cursive.last.file.extension./Users/tengstrand/source/polylith/components/util/src" value="clj" />
    <property name="cursive.last.file.extension./Users/tengstrand/source/polylith/components/util/test" value="clj" />
    <property name="cursive.last.file.extension./Users/tengstrand/source/polylith/components/util2/src" value="clj" />
    <property name="cursive.last.file.extension./Users/tengstrand/source/polylith/components/validate/src" value="clj" />
    <property name="cursive.last.file.extension./Users/tengstrand/source/polylith/components/validate/test" value="clj" />
    <property name="cursive.last.file.extension./Users/tengstrand/source/polylith/components/workspace-clj/src" value="clj" />
    <property name="cursive.last.file.extension./Users/tengstrand/source/polylith/components/workspace-clj/test" value="clj" />
    <property name="cursive.last.file.extension./Users/tengstrand/source/polylith/components/workspace-kt/src" value="clj" />
    <property name="cursive.last.file.extension./Users/tengstrand/source/polylith/components/workspace/src" value="clj" />
    <property name="cursive.last.file.extension./Users/tengstrand/source/polylith/components/workspace/test" value="clj" />
    <property name="settings.editor.selected.configurable" value="preferences.keymap" />
  </component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/components/workspace-clj/test/polylith/workspace_clj" />
      <recent name="$PROJECT_DIR$/components/workspace-clj/src/polylith/workspace_clj" />
      <recent name="$PROJECT_DIR$/bases/tool" />
      <recent name="$PROJECT_DIR$/components/cmd/src/polylith/cmd" />
      <recent name="$PROJECT_DIR$/components/workspace/test/polylith/workspace" />
    </key>
  </component>
  <component name="ReplState" timestamp="1593184403974">{:repl-history {:ide [], :local [{:command &quot;(def src-paths (ws/src-paths config env-group true))&quot;, :offset 52, :ns &quot;polylith.test.core&quot;} {:command &quot;src-paths&quot;, :offset 9, :ns &quot;polylith.test.core&quot;} {:command &quot;(throw-exception-if-empty src-paths env-group)&quot;, :offset 46, :ns &quot;polylith.test.core&quot;} {:command &quot;(def paths (concat src-paths lib-paths))&quot;, :offset 40, :ns &quot;polylith.test.core&quot;} {:command &quot;paths&quot;, :offset 5, :ns &quot;polylith.test.core&quot;} {:command &quot;(def test-namespaces (ws/test-namespaces config env-group))&quot;, :offset 59, :ns &quot;polylith.test.core&quot;} {:command &quot;(def test-statements (map ns-name-&gt;test-statement test-namespaces))&quot;, :offset 67, :ns &quot;polylith.test.core&quot;} {:command &quot;(def class-loader (common/create-class-loader paths))&quot;, :offset 53, :ns &quot;polylith.test.core&quot;} {:command &quot;class-loader&quot;, :offset 12, :ns &quot;polylith.test.core&quot;} {:command &quot;test-statements&quot;, :offset 15, :ns &quot;polylith.test.core&quot;} {:command &quot;(first test-statements)&quot;, :offset 23, :ns &quot;polylith.test.core&quot;} {:command &quot;(def test-statement (first test-statements))&quot;, :offset 44, :ns &quot;polylith.test.core&quot;} {:command &quot;(def result (common/eval-in class-loader statement))&quot;, :offset 52, :ns &quot;polylith.test.core&quot;} {:command &quot;(def result (common/eval-in class-loader test-statement))&quot;, :offset 57, :ns &quot;polylith.test.core&quot;} {:command &quot;test-statement&quot;, :offset 14, :ns &quot;polylith.test.core&quot;} {:command &quot;test-namespaces&quot;, :offset 15, :ns &quot;polylith.test.core&quot;} {:command &quot;(def workspace '{:ws-path \&quot;.\&quot;\n                 :environments [{:name \&quot;core\&quot;\n                                 :group \&quot;core\&quot;\n                                 :test? false\n                                 :component-names [\&quot;change\&quot; \&quot;cmd\&quot;]\n                                 :base-names [{:name \&quot;tool\&quot;, :type \&quot;base\&quot;}]\n                                 :paths [\&quot;../../components/change/src\&quot;\n                                         \&quot;../../components/cmd/src\&quot;\n                                         \&quot;../../bases/cli/src\&quot;]\n                                 :dependencies #:org.clojure{clojure #:mvn{:version \&quot;1.10.1\&quot;}\n                                                             core.async #:mvn{:version \&quot;0.4.500\&quot;}\n                                                             tools.deps.alpha #:mvn{:version \&quot;0.6.496\&quot;}}}\n                                {:name \&quot;core-test\&quot;\n                                 :group \&quot;core\&quot;\n                                 :test? true\n                                 :component-names [\&quot;change\&quot; \&quot;cmd\&quot;]\n                                 :base-names []\n                                 :paths [\&quot;../../components/change/test\&quot;\n                                         \&quot;../../components/cmd/test\&quot;],\n                                 :dependencies #:org.clojure{clojure #:mvn{:version \&quot;1.10.1\&quot;}\n                                                             core.async #:mvn{:version \&quot;0.4.500\&quot;}\n                                                             tools.deps.alpha #:mvn{:version \&quot;0.6.496\&quot;}}}]\n                 :messages {:warnings [], :errors []}})&quot;, :offset 1568, :ns &quot;polylith.workspace.source-test&quot;} {:command &quot;(ns polylith.cli.poly\n  (:require [polylith.spec.interface :as spec]\n            [polylith.test.interface :as test]\n            [polylith.validate.interface :as validate]\n            [polylith.workspace.interface :as ws]\n            [polylith.workspace-clj.interface :as ws-clj]\n            [polylith.change.interface :as change]\n            [clojure.java.io :as io])\n  (:gen-class))&quot;, :offset 383, :ns &quot;user&quot;} {:command &quot;(defn -main [&amp; [cmd env]]\n  (let [ws-path (.getAbsolutePath (io/file \&quot;\&quot;))\n        workspace (-&gt; ws-path\n                      ws-clj/workspace-from-disk\n                      ws/enrich-workspace\n                      change/with-changes)]\n    (if-not (spec/valid-config? (:settings workspace))\n      (println \&quot;Expected to find a :polylith key in 'deps.edn' at the root of the workspace.\&quot;)\n      (try\n        (case cmd\n          \&quot;test\&quot; (test/run workspace env)\n          \&quot;check\&quot; (-&gt; workspace :messages println)\n          (println help-text))\n        (catch Exception e\n          (println (or (-&gt; e ex-data :err) (.getMessage e)))\n          (System/exit (or (-&gt; e ex-data :exit-code) 1)))\n        (finally\n          (System/exit 0))))))&quot;, :offset 735, :ns &quot;polylith.cli.poly&quot;} {:command &quot;(ns polylith.cli.poly\n  (:require [polylith.spec.interface :as spec]\n            [polylith.test.interface :as test]\n            [polylith.cli.cmd-check :as check]\n            [polylith.workspace.interface :as ws]\n            [polylith.workspace-clj.interface :as ws-clj]\n            [polylith.change.interface :as change]\n            [clojure.java.io :as io])\n  (:gen-class))&quot;, :offset 375, :ns &quot;polylith.cli.poly&quot;} {:command &quot;(ns polylith.cli.poly\n  (:require [polylith.spec.interface :as spec]\n            [polylith.test.interface :as test]\n            [polylith.cli.cmd-check :as cmd-check]\n            [polylith.workspace.interface :as ws]\n            [polylith.workspace-clj.interface :as ws-clj]\n            [polylith.change.interface :as change]\n            [clojure.java.io :as io])\n  (:gen-class))&quot;, :offset 379, :ns &quot;polylith.cli.poly&quot;} {:command &quot;(ns polylith.cli.poly\n  (:require [polylith.spec.interface :as spec]\n            [polylith.test.interface :as test]\n            [polylith.cli.cmd.check :as check]\n            [polylith.workspace.interface :as ws]\n            [polylith.workspace-clj.interface :as ws-clj]\n            [polylith.change.interface :as change]\n            [clojure.java.io :as io])\n  (:gen-class))&quot;, :offset 375, :ns &quot;user&quot;} {:command &quot;(ns polylith.test.core\n  (:require [clojure.string :as str]\n            [polylith.common.interface :as common]\n            [polylith.workspace.interface :as ws]\n            [polylith.common.interface.color :as color])\n  (:refer-clojure :exclude [test]))&quot;, :offset 253, :ns &quot;polylith.cli.poly&quot;} {:command &quot;(ns polylith.cli.cmd.help\n  (:require [polylith.common.interface.color :as color]))&quot;, :offset 83, :ns &quot;polylith.test.core&quot;} {:command &quot;(defn command \n  ([cmd]\n   (color/as-green cmd))\n  ([cmd &amp; args]\n   (str (color/as-green cmd) \n        (color/as-yellow (str/join \&quot; \&quot; args)))))&quot;, :offset 143, :ns &quot;polylith.cli.cmd.help&quot;} {:command &quot;(ns polylith.cli.cmd.help\n  (:require [polylith.common.interface.color :as color]\n            [clojure.string :as str]))&quot;, :offset 120, :ns &quot;polylith.cli.cmd.help&quot;} {:command &quot;(defn command \n  ([cmd]\n   (str \&quot;  \&quot; (color/as-green cmd)))\n  ([cmd &amp; args]\n   (str \&quot;  \&quot; (color/as-green cmd) \n        (color/as-yellow (str/join \&quot; \&quot; args)))))&quot;, :offset 159, :ns &quot;polylith.cli.cmd.help&quot;} {:command &quot;(defn command\n  ([cmd]\n   (str \&quot;  \&quot; (color/as-green cmd)))\n  ([cmd &amp; args]\n   (str \&quot;  \&quot; (color/as-green cmd)\n        (color/as-yellow (str/join \&quot; \&quot; args)))))&quot;, :offset 157, :ns &quot;polylith.cli.cmd.help&quot;} {:command &quot;(def help-text\n  (str\n    \&quot;Commands:\\n\&quot;\n    (command \&quot;test\&quot; \&quot;env\&quot;) \&quot;   Runs tests for a given environment that lives\\n\&quot;\n    \&quot;             under the 'environments' root directory.\\n\&quot;\n    \&quot;\\n\&quot;\n    (command \&quot;check\&quot;) \&quot;      Checks that the workspace is valid, such as:\\n\&quot;\n    \&quot;              - components conform to their interfaces\\n\&quot;\n    \&quot;              - there are no circular dependencies\\n\&quot;\n    \&quot;              - bases don't share names with components or interfaces\\n\&quot;))&quot;, :offset 469, :ns &quot;polylith.cli.cmd.help&quot;} {:command &quot;(defn execute []\n  (println help-text))&quot;, :offset 39, :ns &quot;polylith.cli.cmd.help&quot;} {:command &quot;(ns polylith.cli.cmd.print-ws\n  [:require [clojure.pprint :as pp]])&quot;, :offset 67, :ns &quot;polylith.cli.cmd.help&quot;} {:command &quot;(ns polylith.validate.m101-illegal-namespace-deps\n  (:require [polylith.deps.interface :as deps]\n            [polylith.util.interface :as util]\n            [polylith.common.interface.color :as c]))&quot;, :offset 197, :ns &quot;polylith.cli.cmd.print-ws&quot;} {:command &quot;(def grey   \&quot;\\u001b[90m\&quot;)&quot;, :offset 25, :ns &quot;polylith.common.interface.color&quot;} {:command &quot;(defn as-grey [message]\n  (str grey message reset))&quot;, :offset 51, :ns &quot;polylith.common.interface.color&quot;} {:command &quot;(defn colorize [type brick]\n  (if (= type \&quot;component\&quot;)\n    (c/as-green brick)\n    (c/as-blue brick)))&quot;, :offset 101, :ns &quot;polylith.validate.m101-illegal-namespace-deps&quot;} {:command &quot;(defn color [color message]\n  (str color (str/join \&quot; \&quot; message) reset))&quot;, :offset 71, :ns &quot;polylith.common.interface.color&quot;} {:command &quot;(defn color [color messages]\n  (str color (str/join \&quot;\&quot; messages) reset))&quot;, :offset 72, :ns &quot;polylith.common.interface.color&quot;} {:command &quot;(ns polylith.validate.m101-illegal-namespace-deps\n  (:require [polylith.deps.interface :as deps]\n            [polylith.util.interface :as util]\n            [polylith.common.interface.color :as color]))&quot;, :offset 201, :ns &quot;polylith.validate.m101-illegal-namespace-deps&quot;} {:command &quot;(defn colorize [type brick]\n  (if (= type \&quot;component\&quot;)\n    (color/as-green brick)\n    (color/as-blue brick)))&quot;, :offset 109, :ns &quot;polylith.validate.m101-illegal-namespace-deps&quot;} {:command &quot;(defn colorized-brick [type brick]\n  (if (= type \&quot;component\&quot;)\n    (as-green brick)\n    (as-blue brick)))&quot;, :offset 104, :ns &quot;polylith.common.interface.color&quot;} {:command &quot;(defn error-message [{:keys [namespace depends-on-interface depends-on-ns]} brick-name type]\n  (when namespace\n    (let [message (str \&quot;Illegal dependency on namespace \&quot; depends-on-interface \&quot;.\&quot; depends-on-ns\n                       \&quot; in namespace \&quot; namespace \&quot; in the \&quot; brick-name \&quot; \&quot; type\n                       \&quot;. Use \&quot; depends-on-interface \&quot;.interface instead to fix the problem.\&quot;)\n          colorized-msg (str \&quot;Illegal dependency on namespace \&quot; (color/as-grey depends-on-interface \&quot;.\&quot; depends-on-ns)\n                             \&quot; in namespace \&quot; (color/as-grey namespace) \&quot; in the \&quot; (color/colorized-brick type brick-name) \&quot; \&quot; type\n                             \&quot;. Use \&quot; (color/as-grey depends-on-interface \&quot;.interface\&quot;) \&quot; instead to fix the problem.\&quot;)]\n      [(util/ordered-map :type \&quot;error\&quot;\n                         :code 101\n                         :message message\n                         :colorized-message colorized-msg\n                         :bricks [brick-name])])))&quot;, :offset 980, :ns &quot;polylith.validate.m101-illegal-namespace-deps&quot;} {:command &quot;(defn print-message [{:keys [type code message colorized-message]}]\n  (if (= type \&quot;error\&quot;)\n    (println (str (color/as-red \&quot;Error \&quot; code \&quot;: \&quot;) colorized-message))\n    (println (str (color/as-yellow \&quot;Warning \&quot; code \&quot;: \&quot;) colorized-message))))&quot;, :offset 241, :ns &quot;polylith.cli.cmd.check&quot;} {:command &quot;(ns polylith.cli.cmd.check\n  (:require [polylith.common.interface.color :as color]))&quot;, :offset 84, :ns &quot;polylith.validate.m101-illegal-namespace-deps&quot;} {:command &quot;(read-components \&quot;/Users/tengstrand/source/polylith\&quot;\n                 \&quot;polylith/\&quot;\n                 #{\&quot;workspace-clj\&quot; \n                   \&quot;util2\&quot; \n                   \&quot;spec\&quot; \n                   \&quot;util\&quot; \n                   \&quot;validate\&quot; \n                   \&quot;shell\&quot; \n                   \&quot;workspace\&quot; \n                   \&quot;git\&quot; \n                   \&quot;deps\&quot; \n                   \&quot;workspace-kotlin\&quot; \n                   \&quot;file\&quot;\n                   \&quot;common\&quot;\n                   \&quot;test\&quot;\n                   \&quot;change\&quot;})&quot;, :offset 492, :ns &quot;polylith.workspace-clj.components-from-disk&quot;} {:command &quot;(defn replace-underscore [string]\n  (when string\n    (str/replace string \&quot;_\&quot; \&quot;-\&quot;)))&quot;, :offset 83, :ns &quot;polylith.workspace-clj.components-from-disk&quot;} {:command &quot;(read-components \&quot;/Users/tengstrand/source/polylith\&quot;\n                 \&quot;polylith/\&quot;\n                 #{\&quot;workspace-clj\&quot;\n                   \&quot;util2\&quot;\n                   \&quot;spec\&quot;\n                   \&quot;util\&quot;\n                   \&quot;validate\&quot;\n                   \&quot;shell\&quot;\n                   \&quot;workspace\&quot;\n                   \&quot;git\&quot;\n                   \&quot;deps\&quot;\n                   \&quot;workspace-kotlin\&quot;\n                   \&quot;file\&quot;\n                   \&quot;common\&quot;\n                   \&quot;test\&quot;\n                   \&quot;change\&quot;})&quot;, :offset 482, :ns &quot;polylith.workspace-clj.components-from-disk&quot;} {:command &quot;(m103/errors interfaces components)&quot;, :offset 35, :ns &quot;polylith.validate.m103-missing-defs-test&quot;} {:command &quot;(map #(select-keys % [:type :code :message :bricks])\n           (m102/errors components))&quot;, :offset 89, :ns &quot;polylith.validate.m102-duplicated-parameter-lists-test&quot;} {:command &quot;(mapv #(select-keys % [:type :code :message :bricks])\n           (m102/errors components))&quot;, :offset 90, :ns &quot;polylith.validate.m102-duplicated-parameter-lists-test&quot;} {:command &quot;(m102/errors components)&quot;, :offset 24, :ns &quot;polylith.validate.m102-duplicated-parameter-lists-test&quot;} {:command &quot;(mapv #(select-keys % [:type :code :message :components])\n           (m102/errors components))&quot;, :offset 94, :ns &quot;polylith.validate.m102-duplicated-parameter-lists-test&quot;} {:command &quot;(-&gt; \&quot;../clojure-polylith-realworld-example-app\&quot;\n    ws-clojure/workspace-from-disk\n    core/enrich-workspace\n    change/with-changes)&quot;, :offset 133, :ns &quot;polylith.workspace.interface&quot;} {:command &quot;(:messages (-&gt; \n               \&quot;.\&quot;\n               ;\&quot;../clojure-polylith-realworld-example-app\&quot;\n               ws-clojure/workspace-from-disk\n               core/enrich-workspace\n               change/with-changes))&quot;, :offset 214, :ns &quot;polylith.workspace.interface&quot;} {:command &quot;(:components (-&gt;\n                 \&quot;.\&quot;\n                 ;\&quot;../clojure-polylith-realworld-example-app\&quot;\n                 ws-clojure/workspace-from-disk\n                 core/enrich-workspace\n                 change/with-changes))&quot;, :offset 225, :ns &quot;polylith.workspace.interface&quot;} {:command &quot;(defn env-error [[interface interface-components] env-name test?]\n  (when (and (not test?)\n             (&gt; (count interface-components) 1))\n    (let [component-names (mapv second interface-components)\n          message (str \&quot;More than one component that implements the \&quot; interface\n                       \&quot; interface was found in the \&quot; env-name \&quot; environment: \&quot;\n                       (str/join \&quot;, \&quot; component-names))\n          colorized-msg (str \&quot;More than one component that implements the \&quot; (color/interface interface)\n                             \&quot; interface was found in the \&quot; (color/environment env-name) \&quot; environment: \&quot;\n                              (color/component (str/join \&quot;, \&quot; component-names)))]\n      [(util/ordered-map :type \&quot;error\&quot;\n                         :code 106\n                         :message message\n                         :colorized-message colorized-msg\n                         :interface interface\n                         :components component-names\n                         :environment env-name)])))&quot;, :offset 1033, :ns &quot;polylith.validate.m106-multiple-interface-occurrences&quot;} {:command &quot;(defn as-orange [&amp; messages]\n  (color orange messages))&quot;, :offset 55, :ns &quot;polylith.common.interface.color&quot;} {:command &quot;(println (color/as-red \&quot;hej\&quot;))&quot;, :offset 30, :ns &quot;polylith.validate.m106-multiple-interface-occurrences&quot;} {:command &quot;(println \&quot;test\&quot; \&quot;\\u001B[33m\&quot; \&quot;hej\&quot; \&quot;\\u001B[0m\&quot; \&quot;!\&quot;)&quot;, :offset 51, :ns &quot;polylith.validate.m106-multiple-interface-occurrences&quot;} {:command &quot;(println \&quot;test\&quot; \&quot;\\u001B[34m\&quot; \&quot;hej\&quot; \&quot;\\u001B[0m\&quot; \&quot;!\&quot;)&quot;, :offset 51, :ns &quot;polylith.validate.m106-multiple-interface-occurrences&quot;} {:command &quot;(println \&quot;test\&quot; (str \&quot;\\u001B[\&quot; col \&quot;m\&quot; \&quot;hej\&quot; \&quot;\\u001B[0m\&quot; \&quot;!\&quot;))&quot;, :offset 62, :ns &quot;polylith.validate.m106-multiple-interface-occurrences&quot;} {:command &quot;(println \&quot;test\&quot; (str \&quot;\\u001B[\&quot; 34 \&quot;m\&quot; \&quot;hej\&quot; \&quot;\\u001B[0m\&quot; \&quot;!\&quot;))&quot;, :offset 61, :ns &quot;polylith.validate.m106-multiple-interface-occurrences&quot;} {:command &quot;(println \&quot;test\&quot; (str \&quot;\\u001B[\&quot; 34 \&quot;m\&quot; \&quot;hej\&quot; \&quot;\\u001B[0m\&quot; \&quot; xxx\&quot;))&quot;, :offset 64, :ns &quot;polylith.validate.m106-multiple-interface-occurrences&quot;} {:command &quot;(println \&quot;xxx\&quot; (str \&quot;\\u001B[\&quot; 34 \&quot;m\&quot; \&quot;hej\&quot; \&quot;\\u001B[0m\&quot; \&quot; xxx\&quot;))&quot;, :offset 63, :ns &quot;polylith.validate.m106-multiple-interface-occurrences&quot;} {:command &quot;(def orange \&quot;\\u001B[34m\&quot;)&quot;, :offset 25, :ns &quot;polylith.common.interface.color&quot;} {:command &quot;(println \&quot;xxx\&quot; (str \&quot;\\u001B[\&quot; 35 \&quot;m\&quot; \&quot;hej\&quot; \&quot;\\u001B[0m\&quot; \&quot; xxx\&quot;))&quot;, :offset 63, :ns &quot;polylith.validate.m106-multiple-interface-occurrences&quot;} {:command &quot;(defn print-color [col]\n  (println \&quot;xxx\&quot; (str \&quot;\\u001B[\&quot; col \&quot;m\&quot; \&quot;hej\&quot; \&quot;\\u001B[0m\&quot; \&quot; xxx\&quot;)))&quot;, :offset 91, :ns &quot;polylith.cli.cmd.check&quot;} {:command &quot;(defn print-message [{:keys [type code colorized-message]}]\n  (if (= type \&quot;error\&quot;)\n    (println (str (color/as-red \&quot;Error \&quot; code \&quot;: \&quot;) colorized-message))\n    (do (println (str (color/as-yellow \&quot;Warning \&quot; code \&quot;: \&quot;) colorized-message))\n        (doseq [col (range 30 91)]\n          (print-color col)))))&quot;, :offset 302, :ns &quot;polylith.cli.cmd.check&quot;} {:command &quot;(m105/errors interface-names components bases)&quot;, :offset 46, :ns &quot;polylith.validate.m105-illegal-name-sharing-test&quot;} {:command &quot;(deftest errors--when-a-base-and-a-component-the-same-name--returns-error\n  (let [interfaces '[{:name \&quot;mybase\&quot;}]\n        components '[{:name \&quot;mybase\&quot;\n                      :interface {:name \&quot;mybase\&quot;}}]\n        bases [{:name \&quot;mybase\&quot;}]\n        interface-names (set (map :name interfaces))]\n    (is (= [{:type \&quot;error\&quot;\n             :code 105\n             :message \&quot;A base can't have the same name as an interface or component: mybase\&quot;\n             :interfaces [\&quot;mybase\&quot;]\n             :components [\&quot;mybase\&quot;]\n             :bases [\&quot;mybase\&quot;]}]\n           (m105/errors interface-names components bases)))))&quot;, :offset 598, :ns &quot;polylith.validate.m105-illegal-name-sharing-test&quot;} {:command &quot;(map #(select-keys % [:type :code :message :components])\n             (m105/errors interface-names components bases))&quot;, :offset 117, :ns &quot;polylith.validate.m105-illegal-name-sharing-test&quot;} {:command &quot;(deftest errors--when-a-base-and-a-component-the-same-name--returns-error\n  (let [interfaces '[{:name \&quot;mybase\&quot;}]\n        components '[{:name \&quot;mybase\&quot;\n                      :interface {:name \&quot;mybase\&quot;}}]\n        bases [{:name \&quot;mybase\&quot;}]\n        interface-names (set (map :name interfaces))]\n    (is (= [{:type \&quot;error\&quot;\n             :code 105\n             :message \&quot;A base can't have the same name as an interface or component: mybase\&quot;\n             :interfaces L[\&quot;mybase\&quot;]\n             :components [\&quot;mybase\&quot;]\n             :bases [\&quot;mybase\&quot;]}]\n           (map #(select-keys % [:type :code :message :components])\n             (m105/errors interface-names components bases))))))&quot;, :offset 670, :ns &quot;polylith.validate.m105-illegal-name-sharing-test&quot;} {:command &quot;(deftest errors--when-a-base-and-a-component-the-same-name--returns-error\n  (let [interfaces '[{:name \&quot;mybase\&quot;}]\n        components '[{:name \&quot;mybase\&quot;\n                      :interface {:name \&quot;mybase\&quot;}}]\n        bases [{:name \&quot;mybase\&quot;}]\n        interface-names (set (map :name interfaces))]\n    (is (= [{:type \&quot;error\&quot;\n             :code 105\n             :message \&quot;A base can't have the same name as an interface or component: mybase\&quot;\n             :interfaces ´[\&quot;mybase\&quot;]\n             :components [\&quot;mybase\&quot;]\n             :bases [\&quot;mybase\&quot;]}]\n           (map #(select-keys % [:type :code :message :components])\n             (m105/errors interface-names components bases))))))&quot;, :offset 670, :ns &quot;polylith.validate.m105-illegal-name-sharing-test&quot;} {:command &quot;(deftest errors--when-a-base-and-a-component-the-same-name--returns-error\n  (let [interfaces '[{:name \&quot;mybase\&quot;}]\n        components '[{:name \&quot;mybase\&quot;\n                      :interface {:name \&quot;mybase\&quot;}}]\n        bases [{:name \&quot;mybase\&quot;}]\n        interface-names (set (map :name interfaces))]\n    (is (= [{:type \&quot;error\&quot;\n             :code 105\n             :message \&quot;A base can't have the same name as an interface or component: mybase\&quot;\n             :interfaces [\&quot;mybase\&quot;]\n             :components [\&quot;mybase\&quot;]\n             :bases [\&quot;mybase\&quot;]}]\n           (map #(select-keys % [:type :code :message :components])\n             (m105/errors interface-names components bases))))))&quot;, :offset 669, :ns &quot;polylith.validate.m105-illegal-name-sharing-test&quot;} {:command &quot;(def help-text\n  (str\n    \&quot;Commands:\\n\&quot;\n    (command \&quot;check\&quot;) \&quot;      Checks that the workspace is valid, such as:\\n\&quot;\n    \&quot;              - component interfaces conform to their contracts\\n\&quot;\n    \&quot;              - there are no circular dependencies\\n\&quot;\n    \&quot;              - bases don't share names with components or interfaces\\n\&quot;\n    \&quot;\\n\&quot;\n    (environment \&quot;test\&quot; \&quot;env\&quot;) \&quot;   Runs the tests for the given environment.\\n\&quot;\n    \&quot;\\n\&quot;\n    (command \&quot;ws\&quot;) \&quot;         Views current workspace.\\n\&quot;\n    \&quot;\\n\&quot;\n    (command \&quot;help\&quot;) \&quot;       Views this help.\\n\&quot;\n    \&quot;\\n\&quot;))&quot;, :offset 549, :ns &quot;polylith.cli.cmd.help&quot;} {:command &quot; ()comm\n   \n   &quot;, :offset 7, :ns &quot;user&quot;} {:command &quot;(-&gt;\n    \&quot;.\&quot;\n    ;\&quot;../clojure-polylith-realworld-example-app\&quot;\n    ws-clojure/workspace-from-disk\n    core/enrich-workspace\n    change/with-changes)&quot;, :offset 146, :ns &quot;polylith.workspace.interface&quot;} {:command &quot;(-&gt;\n    \&quot;.\&quot;\n    ;\&quot;../clojure-polylith-realworld-example-app\&quot;\n    ws-clojure/workspace-from-disk)&quot;, :offset 96, :ns &quot;polylith.workspace.interface&quot;} {:command &quot;(defn environment\n  ([ws-path env]\n   (let [path (str ws-path \&quot;/environments/\&quot; env \&quot;/deps.edn\&quot;)\n         {:keys [paths deps aliases mvn/repos]} (read-string (slurp path))]\n     (environment env paths deps aliases repos)))\n  ([env paths deps aliases mvn-repos]\n   (let [component-names (vec (sort (set (mapv component-name (filter component? paths)))))\n         base-names (vec (sort (set (mapv base-name (filter base? paths)))))\n         test-paths (vec (sort (set (concat paths (-&gt; aliases :test :extra-paths)))))\n         test-deps (sort-deps (concat deps (-&gt; aliases :test :extra-deps)))\n         component-test-names (vec (sort (set (mapv component-name (filter component? test-paths)))))\n         base-test-names (vec (sort (set (mapv base-name (filter base? test-paths)))))]\n     [(util/ordered-map :name env\n                        :group env\n                        :test? false\n                        :type \&quot;environment\&quot;\n                        :component-names component-names\n                        :base-names base-names\n                        :paths paths\n                        :deps (sort-deps deps)\n                        :mvn-repos mvn-repos)\n      (util/ordered-map :name (str env \&quot;-test\&quot;)\n                        :group env\n                        :test? true\n                        :type \&quot;environment\&quot;\n                        :component-names component-test-names\n                        :base-names base-test-names\n                        :paths test-paths\n                        :deps test-deps\n                        :mvn-repos mvn-repos)])))&quot;, :offset 1573, :ns &quot;polylith.workspace-clj.environment&quot;} {:command &quot;(defn environment\n  ([ws-path env]\n   (let [path (str ws-path \&quot;/environments/\&quot; env \&quot;/deps.edn\&quot;)\n         {:keys [paths deps aliases mvn/repos]} (read-string (slurp path))]\n     (environment env paths deps aliases repos)))\n  ([env paths deps aliases mvn-repos]\n   (let [component-names (vec (sort (set (mapv component-name (filter component? paths)))))\n         base-names (vec (sort (set (mapv base-name (filter base? paths)))))\n         test-paths (vec (sort (set (concat paths (-&gt; aliases :test :extra-paths)))))\n         test-deps (sort-deps (concat deps (-&gt; aliases :test :extra-deps)))\n         component-test-names (vec (sort (set (mapv component-name (filter component? test-paths)))))\n         base-test-names (vec (sort (set (mapv base-name (filter base? test-paths)))))]\n     [(util/ordered-map :name env\n                        :group env\n                        :test? false\n                        :type \&quot;environment\&quot;\n                        :component-names component-names\n                        :base-names base-names\n                        :paths paths\n                        :deps (sort-deps deps)\n                        :maven-repos mvn-repos)\n      (util/ordered-map :name (str env \&quot;-test\&quot;)\n                        :group env\n                        :test? true\n                        :type \&quot;environment\&quot;\n                        :component-names component-test-names\n                        :base-names base-test-names\n                        :paths test-paths\n                        :deps test-deps\n                        :maven-repos mvn-repos)])))&quot;, :offset 1577, :ns &quot;polylith.workspace-clj.environment&quot;} {:command &quot;(defn -&gt;environment [{:keys [deps maven-repos] :as environment}]\n  \&quot;The library names (keys) are stored as strings in the workspace\n   and need to be converted to symbols here.\&quot;\n  (assoc environment :deps (into {} (map key-as-symbol deps))\n                     :mvn/repos maven-repos))&quot;, :offset 285, :ns &quot;polylith.test.core&quot;} {:command &quot;(def maven-repos {\&quot;central\&quot; {:url \&quot;https://repo1.maven.org/maven2/\&quot;}\n                  \&quot;clojars\&quot; {:url \&quot;https://clojars.org/repo\&quot;}})&quot;, :offset 132, :ns &quot;polylith.workspace-clj.environment-test&quot;} {:command &quot;(defn workspace-from-disk\n  ([ws-path]\n   (let [config (read-string (slurp (str ws-path \&quot;/deps.edn\&quot;)))]\n     (workspace-from-disk ws-path config)))\n  ([ws-path {:keys [polylith]}]\n   (let [{:keys [top-namespace dark-mode?]\n          :or {dark-mode? false}} polylith\n         top-ns (common/top-namespace top-namespace)\n         top-src-dir (str/replace top-ns \&quot;.\&quot; \&quot;/\&quot;)\n         component-names (file/directory-paths (str ws-path \&quot;/components\&quot;))\n         components (components-from-disk/read-components ws-path top-src-dir component-names)\n         bases (bases-from-disk/read-bases ws-path top-src-dir)\n         environments (env/environments ws-path)\n         settings (util/ordered-map :top-namespace top-namespace\n                                    :dark-mode? dark-mode?)]\n     (util/ordered-map :ws-path ws-path\n                       :settings settings\n                       :components components\n                       :bases bases\n                       :environments environments))))&quot;, :offset 996, :ns &quot;polylith.workspace-clojure.core&quot;} {:command &quot;(:a {} 1)&quot;, :offset 9, :ns &quot;polylith.workspace.core&quot;} {:command &quot;(defn brick-errors [top-ns {:keys [name interface type namespaces-src]} interface-names]\n  \&quot;Checks for dependencies to component interface namespaces other than 'interface'.\&quot;\n  (let [interface-name (:name interface)\n        dependencies (deps/brick-dependencies top-ns interface-name interface-names namespaces-src)]\n    (vec (mapcat #(error-message % name type)\n                 (filterv #(not= \&quot;interface\&quot; (:depends-on-ns %)) dependencies)))))&quot;, :offset 445, :ns &quot;polylith.validate.m101-illegal-namespace-deps&quot;} {:command &quot;(defn as-green [dark-mode? &amp; messages]\n  (color dark-mode? green messages))&quot;, :offset 75, :ns &quot;polylith.common.interface.color&quot;} {:command &quot;(defn brick [type brick]\n  (if (= type \&quot;component\&quot;)\n    (as-green brick)\n    (as-blue brick)))&quot;, :offset 94, :ns &quot;polylith.common.interface.color&quot;} {:command &quot;(:environments (-&gt;\n                   \&quot;.\&quot;\n                   ;\&quot;../clojure-polylith-realworld-example-app\&quot;\n                   ws-clojure/workspace-from-disk\n                   core/enrich-workspace))&quot;, :offset 198, :ns &quot;polylith.workspace.interface&quot;} {:command &quot;(-&gt;\n    \&quot;.\&quot;\n    ;\&quot;../clojure-polylith-realworld-example-app\&quot;\n    ws-clojure/workspace-from-disk\n    core/enrich-workspace)&quot;, :offset 122, :ns &quot;polylith.workspace.interface&quot;} {:command &quot;(map (juxt :name :interface-deps) (:components (-&gt;\n                                                   \&quot;.\&quot;\n                                                   ;\&quot;../clojure-polylith-realworld-example-app\&quot;\n                                                   ws-clojure/workspace-from-disk\n                                                   core/enrich-workspace\n                                                   change/with-changes)))&quot;, :offset 430, :ns &quot;polylith.workspace.interface&quot;} {:command &quot;(ns polylith.workspace-clj.environment\n  (:require [polylith.file.interface :as file]\n            [clojure.string :as str]\n            [polylith.util.interface :as util]\n            [clojure.tools.deps.alpha.util.maven :as mvn]))&quot;, :offset 229, :ns &quot;user&quot;} {:command &quot;(merge {:a 1} {:a 2})&quot;, :offset 21, :ns &quot;polylith.workspace-clj.environment&quot;} {:command &quot;(merge {:a 1} {:a 2} {:a 3})&quot;, :offset 28, :ns &quot;polylith.workspace-clj.environment&quot;} {:command &quot;(defn run-tests [workspace env-name]\n  (when (str/blank? env-name)\n    (throw (ex-info \&quot;Environment name is required for the test command.\&quot; {})))\n  (let [env-group (group env-name)\n        config (-&gt;config workspace)\n        _ (println \&quot;##config=\&quot; config)\n        lib-paths (ws/lib-paths config env-group true)\n        src-paths (ws/src-paths config env-group true)\n        _ (throw-exception-if-empty src-paths env-group)\n        paths (concat src-paths lib-paths)\n        test-namespaces (ws/test-namespaces config env-group)\n        test-statements (map ns-name-&gt;test-statement test-namespaces)\n        class-loader (common/create-class-loader paths)]\n    (doseq [statement test-statements]\n      (let [{:keys [error fail pass] :as summary} (common/eval-in class-loader statement)\n            result-str (str \&quot;Test results: \&quot; pass \&quot; passes, \&quot; fail \&quot; failures, \&quot; error \&quot; errors.\&quot;)]\n        (when (or (&lt; 0 error)\n                  (&lt; 0 fail))\n          (throw (ex-info (str \&quot;\\n\&quot; (color/as-red result-str)) summary)))\n        (println (str \&quot;\\n\&quot; (color/as-green result-str)))))))&quot;, :offset 1078, :ns &quot;polylith.test.core&quot;} {:command &quot;(ns polylith.workspace.dependencies\n  (:require [clojure.tools.deps.alpha :as tools-deps]\n            [polylith.workspace.environment :as env]))&quot;, :offset 144, :ns &quot;polylith.workspace-clj.environment&quot;} {:command &quot;(defn select-deps [{:keys [environments]} env-group include-tests? additional-deps]\n  (let [envs (env/select environments env-group include-tests?)]\n    (merge additional-deps\n           (into (sorted-map) (mapcat :deps envs)))))&quot;, :offset 229, :ns &quot;polylith.workspace.dependencies&quot;} {:command &quot;(defn resolve-deps [workspace deps]\n  (try\n    (tools-deps/resolve-deps workspace {:extra-deps deps})\n    (catch Exception e\n      (println \&quot;Nu bidde det fel: \&quot; e))))&quot;, :offset 166, :ns &quot;polylith.workspace.dependencies&quot;} {:command &quot;(ns polylith.workspace.interface\n  (:require [polylith.change.interface :as change]\n            [polylith.workspace.core :as core]\n            [polylith.workspace.source :as source]\n            [polylith.workspace.dependencies :as deps]\n            [polylith.workspace.environment :as environment]\n            [polylith.workspace-clj.interface :as ws-clojure]))&quot;, :offset 361, :ns &quot;polylith.workspace.dependencies&quot;} {:command &quot;(defn test-env? [{:keys [group test?]} env-group]\n  (and test?\n       (= group env-group)))&quot;, :offset 91, :ns &quot;polylith.test.core&quot;} {:command &quot;(defn -&gt;config [{:keys [environments] :as workspace} env-group]\n  (let [{:keys [maven-repos]} (util/find-first #(test-env? % env-group) environments)]\n    (assoc workspace :mvn/repos maven-repos\n                     :environments (mapv -&gt;environment environments))))&quot;, :offset 266, :ns &quot;polylith.test.core&quot;} {:command &quot;(defn workspace-from-disk\n  ([ws-path]\n   (let [config (read-string (slurp (str ws-path \&quot;/deps.edn\&quot;)))]\n     (workspace-from-disk ws-path config)))\n  ([ws-path {:keys [polylith mvn/repos]}]\n   (let [{:keys [top-namespace dark-mode?]} polylith\n         top-ns (common/top-namespace top-namespace)\n         top-src-dir (str/replace top-ns \&quot;.\&quot; \&quot;/\&quot;)\n         component-names (file/directory-paths (str ws-path \&quot;/components\&quot;))\n         components (components-from-disk/read-components ws-path top-src-dir component-names)\n         bases (bases-from-disk/read-bases ws-path top-src-dir)\n         environments (env/environments ws-path repos)\n         settings (util/ordered-map :top-namespace top-namespace\n                                    :dark-mode? dark-mode?\n                                    :maven-repos repos)]\n     (util/ordered-map :ws-path ws-path\n                       :settings settings\n                       :components components\n                       :bases bases\n                       :environments environments))))&quot;, :offset 1034, :ns &quot;polylith.workspace-clj.core&quot;}], :remote []}}</component>
  <component name="RunManager" selected="Bash.Test">
    <configuration default="true" type="ClojureREPL" factoryName="Local" activateToolWindowBeforeRun="false">
      <setting name="replType" value="NREPL" />
      <setting name="execution" value="LEININGEN" />
      <setting name="jvmArgs" value="" />
      <setting name="parameters" value="" />
      <setting name="workingDir" value="" />
      <setting name="profiles" value="" />
      <setting name="aliases" value="" />
      <setting name="fixLineNumbers" value="false" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="ClojureREPL" factoryName="Remote" activateToolWindowBeforeRun="false">
      <setting name="host" value="" />
      <setting name="port" value="0" />
      <setting name="replType" value="SOCKET" />
      <setting name="configType" value="SPECIFY" />
      <setting name="fixLineNumbers" value="false" />
      <method v="2" />
    </configuration>
  </component>
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="efb7e483-1e6d-4313-8bc6-039a64b976a1" name="Default Changelist" comment="" />
      <created>1591695229521</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1591695229521</updated>
    </task>
    <task id="LOCAL−00064" summary="Renamed brick attribute from :imports to :namespaces.">
      <created>1592441226513</created>
      <option name="number" value="LOCAL−00064" />
      <option name="presentableId" value="LOCAL−00064" />
      <updated>1592441226513</updated>
    </task>
    <task id="LOCAL−00065" summary="Renamed from :ns-path to :name in each namespace.">
      <created>1592442828257</created>
      <option name="number" value="LOCAL−00065" />
      <option name="presentableId" value="LOCAL−00065" />
      <updated>1592442828257</updated>
    </task>
    <task id="LOCAL−00066" summary="Calculate correct namespace names.">
      <created>1592451667840</created>
      <option name="number" value="LOCAL−00066" />
      <option name="presentableId" value="LOCAL−00066" />
      <updated>1592451667840</updated>
    </task>
    <task id="LOCAL−00067" summary="Renamed from :implementing-deps to :implementing-interface-deps.">
      <created>1592452118345</created>
      <option name="number" value="LOCAL−00067" />
      <option name="presentableId" value="LOCAL−00067" />
      <updated>1592452118345</updated>
    </task>
    <task id="LOCAL−00068" summary="Include :sub-ns in data definitions only if is set.">
      <created>1592452688051</created>
      <option name="number" value="LOCAL−00068" />
      <option name="presentableId" value="LOCAL−00068" />
      <updated>1592452688051</updated>
    </task>
    <task id="LOCAL−00069" summary="Renamed from pimp to enrich.">
      <created>1592452961978</created>
      <option name="number" value="LOCAL−00069" />
      <option name="presentableId" value="LOCAL−00069" />
      <updated>1592452961978</updated>
    </task>
    <task id="LOCAL−00070" summary="Removed ':sub-ns &quot;&quot;' statements.">
      <created>1592460559404</created>
      <option name="number" value="LOCAL−00070" />
      <option name="presentableId" value="LOCAL−00070" />
      <updated>1592460559404</updated>
    </task>
    <task id="LOCAL−00071" summary="Cleaned up some code.">
      <created>1592460992256</created>
      <option name="number" value="LOCAL−00071" />
      <option name="presentableId" value="LOCAL−00071" />
      <updated>1592460992256</updated>
    </task>
    <task id="LOCAL−00072" summary="Calculates lines of code.">
      <created>1592473234358</created>
      <option name="number" value="LOCAL−00072" />
      <option name="presentableId" value="LOCAL−00072" />
      <updated>1592473234358</updated>
    </task>
    <task id="LOCAL−00073" summary="Changed name to :lines-of-code-src and :lines-of-code-test">
      <created>1592480944617</created>
      <option name="number" value="LOCAL−00073" />
      <option name="presentableId" value="LOCAL−00073" />
      <updated>1592480944617</updated>
    </task>
    <task id="LOCAL−00074" summary="Renamed from :namespaces to :src-namespaces.">
      <created>1592485468674</created>
      <option name="number" value="LOCAL−00074" />
      <option name="presentableId" value="LOCAL−00074" />
      <updated>1592485468674</updated>
    </task>
    <task id="LOCAL−00075" summary="Renamed from :lib-imports to :src-lib-imports.">
      <created>1592486225763</created>
      <option name="number" value="LOCAL−00075" />
      <option name="presentableId" value="LOCAL−00075" />
      <updated>1592486225763</updated>
    </task>
    <task id="LOCAL−00076" summary="Added :test-lib-imports.">
      <created>1592486917668</created>
      <option name="number" value="LOCAL−00076" />
      <option name="presentableId" value="LOCAL−00076" />
      <updated>1592486917668</updated>
    </task>
    <task id="LOCAL−00077" summary="Changed from :src-lib-imports to :lib-imports-src and from :test-lib-imports to :lib-imports-test.">
      <created>1592487402239</created>
      <option name="number" value="LOCAL−00077" />
      <option name="presentableId" value="LOCAL−00077" />
      <updated>1592487402239</updated>
    </task>
    <task id="LOCAL−00078" summary="Renamed from :src-namespaces to :namespaces-src.">
      <created>1592487611609</created>
      <option name="number" value="LOCAL−00078" />
      <option name="presentableId" value="LOCAL−00078" />
      <updated>1592487611609</updated>
    </task>
    <task id="LOCAL−00079" summary="Changed from :test-namespaces to :namespaces-test.">
      <created>1592487797554</created>
      <option name="number" value="LOCAL−00079" />
      <option name="presentableId" value="LOCAL−00079" />
      <updated>1592487797554</updated>
    </task>
    <task id="LOCAL−00080" summary="Only calculate :lines-of-code and :lib-imports for environments.">
      <created>1592534111513</created>
      <option name="number" value="LOCAL−00080" />
      <option name="presentableId" value="LOCAL−00080" />
      <updated>1592534111513</updated>
    </task>
    <task id="LOCAL−00081" summary="Store keys in :deps as strings.">
      <created>1592544272511</created>
      <option name="number" value="LOCAL−00081" />
      <option name="presentableId" value="LOCAL−00081" />
      <updated>1592544272511</updated>
    </task>
    <task id="LOCAL−00082" summary="Store :env-prefix in :settings.">
      <created>1592547788265</created>
      <option name="number" value="LOCAL−00082" />
      <option name="presentableId" value="LOCAL−00082" />
      <updated>1592547788265</updated>
    </task>
    <task id="LOCAL−00083" summary="Renamed from :components and :bases to :component-names and :base-names in each environment.">
      <created>1592626859001</created>
      <option name="number" value="LOCAL−00083" />
      <option name="presentableId" value="LOCAL−00083" />
      <updated>1592626859003</updated>
    </task>
    <task id="LOCAL−00084" summary="Check if more than one component implements the same interface in an environment.">
      <created>1592635767798</created>
      <option name="number" value="LOCAL−00084" />
      <option name="presentableId" value="LOCAL−00084" />
      <updated>1592635767799</updated>
    </task>
    <task id="LOCAL−00085" summary="Replaced :brick-&gt;lib-imports-src and :brick-&gt;lib-imports-test with :brick-&gt;lib-imports.">
      <created>1592637898048</created>
      <option name="number" value="LOCAL−00085" />
      <option name="presentableId" value="LOCAL−00085" />
      <updated>1592637898049</updated>
    </task>
    <task id="LOCAL−00086" summary="Cleaned up a function call.">
      <created>1592638101775</created>
      <option name="number" value="LOCAL−00086" />
      <option name="presentableId" value="LOCAL−00086" />
      <updated>1592638101775</updated>
    </task>
    <task id="LOCAL−00087" summary="Have one single error message per component for the &quot;missing definitions&quot; error.">
      <created>1592648819832</created>
      <option name="number" value="LOCAL−00087" />
      <option name="presentableId" value="LOCAL−00087" />
      <updated>1592648819832</updated>
    </task>
    <task id="LOCAL−00088" summary="Monor updates.">
      <created>1592687770929</created>
      <option name="number" value="LOCAL−00088" />
      <option name="presentableId" value="LOCAL−00088" />
      <updated>1592687770929</updated>
    </task>
    <task id="LOCAL−00089" summary="Renamed namespace.">
      <created>1592755840562</created>
      <option name="number" value="LOCAL−00089" />
      <option name="presentableId" value="LOCAL−00089" />
      <updated>1592755840562</updated>
    </task>
    <task id="LOCAL−00090" summary="Calculate circular dependencies based on environments. Handle messages as hash maps.">
      <created>1592801356854</created>
      <option name="number" value="LOCAL−00090" />
      <option name="presentableId" value="LOCAL−00090" />
      <updated>1592801356854</updated>
    </task>
    <task id="LOCAL−00091" summary="Removed the '' in error message 101.">
      <created>1592802887132</created>
      <option name="number" value="LOCAL−00091" />
      <option name="presentableId" value="LOCAL−00091" />
      <updated>1592802887133</updated>
    </task>
    <task id="LOCAL−00092" summary="Prefixed message namespaces with &quot;m&quot; + code.">
      <created>1592804455846</created>
      <option name="number" value="LOCAL−00092" />
      <option name="presentableId" value="LOCAL−00092" />
      <updated>1592804455846</updated>
    </task>
    <task id="LOCAL−00093" summary="Updated todo.">
      <created>1592820874944</created>
      <option name="number" value="LOCAL−00093" />
      <option name="presentableId" value="LOCAL−00093" />
      <updated>1592820874944</updated>
    </task>
    <task id="LOCAL−00094" summary="Fixed NPE problem when calculating lines of code.">
      <created>1592828739594</created>
      <option name="number" value="LOCAL−00094" />
      <option name="presentableId" value="LOCAL−00094" />
      <updated>1592828739595</updated>
    </task>
    <task id="LOCAL−00095" summary="Added a REPL config.">
      <created>1592906085710</created>
      <option name="number" value="LOCAL−00095" />
      <option name="presentableId" value="LOCAL−00095" />
      <updated>1592906085712</updated>
    </task>
    <task id="LOCAL−00096" summary="Read environments from the root folder 'environments'. The test command fails.">
      <created>1592940614289</created>
      <option name="number" value="LOCAL−00096" />
      <option name="presentableId" value="LOCAL−00096" />
      <updated>1592940614289</updated>
    </task>
    <task id="LOCAL−00097" summary="Fixed failing tests.">
      <created>1592943817319</created>
      <option name="number" value="LOCAL−00097" />
      <option name="presentableId" value="LOCAL−00097" />
      <updated>1592943817319</updated>
    </task>
    <task id="LOCAL−00098" summary="Changed namespace from polylith.tool.poly to polylith.cli.poly.">
      <created>1592944838596</created>
      <option name="number" value="LOCAL−00098" />
      <option name="presentableId" value="LOCAL−00098" />
      <updated>1592944838596</updated>
    </task>
    <task id="LOCAL−00099" summary="Added these commands: check, help, ws">
      <created>1592951146834</created>
      <option name="number" value="LOCAL−00099" />
      <option name="presentableId" value="LOCAL−00099" />
      <updated>1592951146834</updated>
    </task>
    <task id="LOCAL−00100" summary="Added :colorized-message to messages + start print errors and warnings with nice colors.">
      <created>1592987989794</created>
      <option name="number" value="LOCAL−00100" />
      <option name="presentableId" value="LOCAL−00100" />
      <updated>1592987989795</updated>
    </task>
    <task id="LOCAL−00101" summary="Handle mvn/repos per environment.">
      <created>1593015127707</created>
      <option name="number" value="LOCAL−00101" />
      <option name="presentableId" value="LOCAL−00101" />
      <updated>1593015127707</updated>
    </task>
    <task id="LOCAL−00102" summary="Renamed from workspace-clj to workspace-clojure.">
      <created>1593015376934</created>
      <option name="number" value="LOCAL−00102" />
      <option name="presentableId" value="LOCAL−00102" />
      <updated>1593015376934</updated>
    </task>
    <task id="LOCAL−00103" summary="Removed :env-prefix.">
      <created>1593027267811</created>
      <option name="number" value="LOCAL−00103" />
      <option name="presentableId" value="LOCAL−00103" />
      <updated>1593027267811</updated>
    </task>
    <task id="LOCAL−00104" summary="Handle :mvn/repos correctly. Allow to have :mvn/repos in the root deps.edn + in each environment. When running tests, use the :mvn/repos for the given environment.">
      <created>1593057660437</created>
      <option name="number" value="LOCAL−00104" />
      <option name="presentableId" value="LOCAL−00104" />
      <updated>1593057660437</updated>
    </task>
    <task id="LOCAL−00105" summary="Removed enrichment of settings in the workspace.">
      <created>1593059206617</created>
      <option name="number" value="LOCAL−00105" />
      <option name="presentableId" value="LOCAL−00105" />
      <updated>1593059206617</updated>
    </task>
    <task id="LOCAL−00106" summary="Support :dark-mode? setting.">
      <created>1593061312558</created>
      <option name="number" value="LOCAL−00106" />
      <option name="presentableId" value="LOCAL−00106" />
      <updated>1593061312558</updated>
    </task>
    <task id="LOCAL−00107" summary="Renamed from 'test' to 'test-runner'.">
      <created>1593061863248</created>
      <option name="number" value="LOCAL−00107" />
      <option name="presentableId" value="LOCAL−00107" />
      <updated>1593061863248</updated>
    </task>
    <task id="LOCAL−00108" summary="If an 'env' is not given in the test command, run all tests.">
      <created>1593063549266</created>
      <option name="number" value="LOCAL−00108" />
      <option name="presentableId" value="LOCAL−00108" />
      <updated>1593063549266</updated>
    </task>
    <task id="LOCAL−00109" summary="Implemented error 107: missing component interfaces in environment.">
      <created>1593074916715</created>
      <option name="number" value="LOCAL−00109" />
      <option name="presentableId" value="LOCAL−00109" />
      <updated>1593074916715</updated>
    </task>
    <task id="LOCAL−00110" summary="Only show error 107 for none test environments.">
      <created>1593075408367</created>
      <option name="number" value="LOCAL−00110" />
      <option name="presentableId" value="LOCAL−00110" />
      <updated>1593075408367</updated>
    </task>
    <task id="LOCAL−00111" summary="Removed mvn/repos at the root + print error messages if the test command doesn't work. The tests for the realworld example doesn't work.">
      <created>1593154980655</created>
      <option name="number" value="LOCAL−00111" />
      <option name="presentableId" value="LOCAL−00111" />
      <updated>1593154980656</updated>
    </task>
    <task id="LOCAL−00112" summary="Updated the todo.">
      <created>1593159078027</created>
      <option name="number" value="LOCAL−00112" />
      <option name="presentableId" value="LOCAL−00112" />
      <updated>1593159078028</updated>
    </task>
    <option name="localTasksCounter" value="113" />
    <servers />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
    <option name="oldMeFiltersMigrated" value="true" />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Renamed namespace." />
    <MESSAGE value="Calculate circular dependencies based on environments. Handle messages as hash maps." />
    <MESSAGE value="Removed the '' in error message 101." />
    <MESSAGE value="Prefixed message namespaces with &quot;m&quot; + code." />
    <MESSAGE value="Updated todo." />
    <MESSAGE value="Fixed NPE problem when calculating lines of code." />
    <MESSAGE value="Added a REPL config." />
    <MESSAGE value="Read environments from the root folder 'environments'. The test command fails." />
    <MESSAGE value="Fixed failing tests." />
    <MESSAGE value="Changed namespace from polylith.tool.poly to polylith.cli.poly." />
    <MESSAGE value="Added these commands: check, help, ws" />
    <MESSAGE value="Added :colorized-message to messages + start print errors and warnings with nice colors." />
    <MESSAGE value="Handle mvn/repos per environment." />
    <MESSAGE value="Renamed from workspace-clj to workspace-clojure." />
    <MESSAGE value="Removed :env-prefix." />
    <MESSAGE value="Handle :mvn/repos correctly. Allow to have :mvn/repos in the root deps.edn + in each environment. When running tests, use the :mvn/repos for the given environment." />
    <MESSAGE value="Removed enrichment of settings in the workspace." />
    <MESSAGE value="Support :dark-mode? setting." />
    <MESSAGE value="Renamed from 'test' to 'test-runner'." />
    <MESSAGE value="If an 'env' is not given in the test command, run all tests." />
    <MESSAGE value="Implemented error 107: missing component interfaces in environment." />
    <MESSAGE value="Only show error 107 for none test environments." />
    <MESSAGE value="Removed mvn/repos at the root + print error messages if the test command doesn't work." />
    <MESSAGE value="Removed mvn/repos at the root + print error messages if the test command doesn't work. The tests for the realworld example doesn't work." />
    <MESSAGE value="Updated the todo." />
    <option name="LAST_COMMIT_MESSAGE" value="Updated the todo." />
  </component>
  <component name="WindowStateProjectService">
    <state x="440" y="184" key="#Plugins" timestamp="1593239223576">
      <screen x="0" y="23" width="1680" height="1027" />
    </state>
    <state x="440" y="184" key="#Plugins/0.23.1680.1027@0.23.1680.1027" timestamp="1593239223576" />
    <state x="288" y="89" key="#com.intellij.execution.impl.EditConfigurationsDialog" timestamp="1593239205504">
      <screen x="0" y="23" width="1680" height="1027" />
    </state>
    <state x="288" y="89" key="#com.intellij.execution.impl.EditConfigurationsDialog/0.23.1680.1027@0.23.1680.1027" timestamp="1593239205504" />
    <state x="603" y="247" key="#xdebugger.evaluate" timestamp="1592328859161">
      <screen x="0" y="23" width="1680" height="1027" />
    </state>
    <state x="603" y="247" key="#xdebugger.evaluate/0.23.1680.1027@0.23.1680.1027" timestamp="1592328859161" />
    <state x="135" y="66" width="1504" height="870" key="CommitChangelistDialog2" timestamp="1593164133821">
      <screen x="0" y="23" width="1680" height="1027" />
    </state>
    <state x="135" y="66" width="1504" height="870" key="CommitChangelistDialog2/0.23.1680.1027@0.23.1680.1027" timestamp="1593164133821" />
    <state x="168" y="115" key="DiffContextDialog" timestamp="1593074330246">
      <screen x="0" y="23" width="1680" height="1027" />
    </state>
    <state x="168" y="115" key="DiffContextDialog/0.23.1680.1027@0.23.1680.1027" timestamp="1593074330246" />
    <state width="1638" height="350" key="GridCell.Tab.0.bottom" timestamp="1592973191245">
      <screen x="0" y="23" width="1680" height="1027" />
    </state>
    <state width="1638" height="350" key="GridCell.Tab.0.bottom/0.23.1680.1027@0.23.1680.1027" timestamp="1592973191245" />
    <state width="1638" height="350" key="GridCell.Tab.0.center" timestamp="1592973191244">
      <screen x="0" y="23" width="1680" height="1027" />
    </state>
    <state width="1638" height="350" key="GridCell.Tab.0.center/0.23.1680.1027@0.23.1680.1027" timestamp="1592973191244" />
    <state width="1638" height="350" key="GridCell.Tab.0.left" timestamp="1592973191244">
      <screen x="0" y="23" width="1680" height="1027" />
    </state>
    <state width="1638" height="350" key="GridCell.Tab.0.left/0.23.1680.1027@0.23.1680.1027" timestamp="1592973191244" />
    <state width="1638" height="350" key="GridCell.Tab.0.right" timestamp="1592973191244">
      <screen x="0" y="23" width="1680" height="1027" />
    </state>
    <state width="1638" height="350" key="GridCell.Tab.0.right/0.23.1680.1027@0.23.1680.1027" timestamp="1592973191244" />
    <state width="1638" height="350" key="GridCell.Tab.1.bottom" timestamp="1592973191246">
      <screen x="0" y="23" width="1680" height="1027" />
    </state>
    <state width="1638" height="350" key="GridCell.Tab.1.bottom/0.23.1680.1027@0.23.1680.1027" timestamp="1592973191246" />
    <state width="1638" height="350" key="GridCell.Tab.1.center" timestamp="1592973191245">
      <screen x="0" y="23" width="1680" height="1027" />
    </state>
    <state width="1638" height="350" key="GridCell.Tab.1.center/0.23.1680.1027@0.23.1680.1027" timestamp="1592973191245" />
    <state width="1638" height="350" key="GridCell.Tab.1.left" timestamp="1592973191245">
      <screen x="0" y="23" width="1680" height="1027" />
    </state>
    <state width="1638" height="350" key="GridCell.Tab.1.left/0.23.1680.1027@0.23.1680.1027" timestamp="1592973191245" />
    <state width="1638" height="350" key="GridCell.Tab.1.right" timestamp="1592973191245">
      <screen x="0" y="23" width="1680" height="1027" />
    </state>
    <state width="1638" height="350" key="GridCell.Tab.1.right/0.23.1680.1027@0.23.1680.1027" timestamp="1592973191245" />
    <state x="168" y="115" key="MergeDialog" timestamp="1592828502091">
      <screen x="0" y="23" width="1680" height="1027" />
    </state>
    <state x="168" y="115" key="MergeDialog/0.23.1680.1027@0.23.1680.1027" timestamp="1592828502091" />
    <state x="478" y="305" key="MultipleFileMergeDialog" timestamp="1592300849092">
      <screen x="0" y="23" width="1680" height="1027" />
    </state>
    <state x="478" y="305" key="MultipleFileMergeDialog/0.23.1680.1027@0.23.1680.1027" timestamp="1592300849092" />
    <state x="108" y="243" key="NewModule_or_Project.wizard" timestamp="1593157263210">
      <screen x="0" y="23" width="1680" height="1027" />
    </state>
    <state x="108" y="243" key="NewModule_or_Project.wizard/0.23.1680.1027@0.23.1680.1027" timestamp="1593157263210" />
    <state x="600" y="254" key="RollbackChangesDialog" timestamp="1593159050392">
      <screen x="0" y="23" width="1680" height="1027" />
    </state>
    <state x="600" y="254" key="RollbackChangesDialog/0.23.1680.1027@0.23.1680.1027" timestamp="1593159050392" />
    <state x="341" y="175" key="SettingsEditor" timestamp="1592647919364">
      <screen x="0" y="23" width="1680" height="1027" />
    </state>
    <state x="341" y="175" key="SettingsEditor/0.23.1680.1027@0.23.1680.1027" timestamp="1592647919364" />
    <state x="440" y="263" key="Vcs.Push.Dialog.v2" timestamp="1593154982651">
      <screen x="0" y="23" width="1680" height="1027" />
    </state>
    <state x="440" y="263" key="Vcs.Push.Dialog.v2/0.23.1680.1027@0.23.1680.1027" timestamp="1593154982651" />
    <state x="0" y="123" width="1680" height="827" key="com.intellij.history.integration.ui.views.FileHistoryDialog" timestamp="1593052125768">
      <screen x="0" y="23" width="1680" height="1027" />
    </state>
    <state x="0" y="123" width="1680" height="827" key="com.intellij.history.integration.ui.views.FileHistoryDialog/0.23.1680.1027@0.23.1680.1027" timestamp="1593052125768" />
    <state x="100" y="123" width="1480" height="827" key="com.intellij.history.integration.ui.views.SelectionHistoryDialog" timestamp="1593018886311">
      <screen x="0" y="23" width="1680" height="1027" />
    </state>
    <state x="100" y="123" width="1480" height="827" key="com.intellij.history.integration.ui.views.SelectionHistoryDialog/0.23.1680.1027@0.23.1680.1027" timestamp="1593018886311" />
    <state x="463" y="154" key="com.intellij.openapi.editor.actions.MultiplePasteAction$ClipboardContentChooser" timestamp="1592757549012">
      <screen x="0" y="23" width="1680" height="1027" />
    </state>
    <state x="463" y="154" key="com.intellij.openapi.editor.actions.MultiplePasteAction$ClipboardContentChooser/0.23.1680.1027@0.23.1680.1027" timestamp="1592757549012" />
    <state x="628" y="457" key="com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2" timestamp="1593155424559">
      <screen x="0" y="23" width="1680" height="1027" />
    </state>
    <state x="628" y="457" key="com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2/0.23.1680.1027@0.23.1680.1027" timestamp="1593155424559" />
    <state x="328" y="221" width="838" height="705" key="find.popup" timestamp="1593171881688">
      <screen x="0" y="23" width="1680" height="1027" />
    </state>
    <state x="328" y="221" width="838" height="705" key="find.popup/0.23.1680.1027@0.23.1680.1027" timestamp="1593171881688" />
    <state x="537" y="332" key="git4idea.merge.GitPullDialog" timestamp="1593074940669">
      <screen x="0" y="23" width="1680" height="1027" />
    </state>
    <state x="537" y="332" key="git4idea.merge.GitPullDialog/0.23.1680.1027@0.23.1680.1027" timestamp="1593074940669" />
    <state x="186" y="112" key="new project wizard" timestamp="1592821197194">
      <screen x="0" y="23" width="1680" height="1027" />
    </state>
    <state x="186" y="112" key="new project wizard/0.23.1680.1027@0.23.1680.1027" timestamp="1592821197194" />
    <state x="449" y="250" width="781" height="676" key="search.everywhere.popup" timestamp="1593063977819">
      <screen x="0" y="23" width="1680" height="1027" />
    </state>
    <state x="449" y="250" width="781" height="676" key="search.everywhere.popup/0.23.1680.1027@0.23.1680.1027" timestamp="1593063977819" />
  </component>
</project>