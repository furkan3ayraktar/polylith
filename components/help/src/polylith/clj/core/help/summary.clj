(ns polylith.clj.core.help.summary)

(def help-text
  (str
    "  Polylith - https://github.com/polyfy/polylith\n\n"
    "  poly CMD [ARGS] - where CMD [ARGS] are:\n\n"
    "    check                   Checks if the workspace is valid.\n"
    "    create E name:N [ARG]   Creates a component, base, environment or workspace.\n"
    "    deps [env:E] [brick:B]  Shows dependencies.\n"
    "    diff                    Shows changed files since last stable point in time.\n"
    "    help [C]                Shows this help or help for a specified command.\n"
    "    info [:loc]             Shows a workspace overview and checks if it's valid.\n"
    "    libs                    Shows all libraries in the workspace.\n"
    "    test [ARGS]             Runs tests.\n"
    "    ws [get:X]              Shows the workspace as data.\n"
    "\n"
    "  If ws-dir:PATH is passed in as an argument, where PATH is a relative or absolute\n"
    "  path, then the command is executed from that directory. If :: is passed in, then\n"
    "  ws-dir is set to the first parent directory (or current) that contain a 'deps.edn'\n"
    "  workspace config file. The exception is the 'test' command that has to be executed\n"
    "  from the root.\n"
    "\n"
    "  Examples:\n"
    "    poly\n"
    "    poly check\n"
    "    poly create c name:user\n"
    "    poly create c name:admin interface:user\n"
    "    poly create b name:mybase\n"
    "    poly create e name:myenv\n"
    "    poly create w name:myws top-ns:se.example\n"
    "    poly deps\n"
    "    poly deps env:myenv\n"
    "    poly deps brick:mybrick\n"
    "    poly deps env:myenv brick:mybrick\n"
    "    poly diff\n"
    "    poly help\n"
    "    poly help info\n"
    "    poly help create c\n"
    "    poly help create b\n"
    "    poly help create e\n"
    "    poly help create w\n"
    "    poly help deps\n"
    "    poly help deps :env\n"
    "    poly help deps :brick\n"
    "    poly help deps :env :brick\n"
    "    poly info\n"
    "    poly info :loc\n"
    "    poly info ::\n"
    "    poly info ws-dir:another-ws\n"
    "    poly libs\n"
    "    poly test\n"
    "    poly test env:myenv\n"
    "    poly test env:myenv:another-env\n"
    "    poly test :env\n"
    "    poly test :dev\n"
    "    poly test :env :dev\n"
    "    poly test :all\n"
    "    poly test :all-bricks\n"
    "    poly ws\n"
    "    poly ws get:keys\n"
    "    poly ws get:count\n"
    "    poly ws get:key1\n"
    "    poly ws get:key1:0\n"
    "    poly ws get:key1:key2\n"
    "    poly ws get:key1:key2:keys\n"
    "    poly ws get:key1:key2:keys:count\n"))

(defn print-help []
  (println help-text))
